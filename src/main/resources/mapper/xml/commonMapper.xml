<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.carrot.common.mapper.crm.CommonMapper">

    <resultMap id="PersonMap" type="com.carrot.client.dao.PersonVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="gender" jdbcType="VARCHAR" column="gender"/>
        <result property="birth" jdbcType="VARCHAR" column="birth"/>
        <result property="ageRange" jdbcType="VARCHAR" column="age_range"/>
        <result property="email" jdbcType="VARCHAR" column="email"/>
        <result property="idxCrmMetaRoute" jdbcType="INTEGER" column="idx_crm_meta_route"/>
        <result property="routeName" jdbcType="VARCHAR" column="route_name"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="createStaff" jdbcType="VARCHAR" column="create_staff"/>
        <result property="updateStaff" jdbcType="VARCHAR" column="update_staff"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="idxCrmStaffCreate" jdbcType="INTEGER" column="idx_crm_staff_create"/>
        <result property="idxCrmStaffUpdate" jdbcType="INTEGER" column="idx_crm_staff_update"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="MemoMap" type="com.carrot.client.dao.MemoVO">
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="idxCrmPerson" jdbcType="VARCHAR" column="idx_crm_person"/>
        <result property="idxCrmCenter" jdbcType="VARCHAR" column="idx_crm_center"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="createStaff" jdbcType="VARCHAR" column="create_staff"/>
        <result property="idxCrmStaffCreate" jdbcType="INTEGER" column="idx_crm_staff_create"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
    </resultMap>

    <resultMap id="UserMap" type="com.carrot.user.dao.UserVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="id" jdbcType="VARCHAR" column="id"/>
        <result property="pwd" jdbcType="VARCHAR" column="pwd"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="gender" jdbcType="VARCHAR" column="gender"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="email" jdbcType="VARCHAR" column="email"/>
        <result property="birth" jdbcType="VARCHAR" column="birth"/>
        <result property="education" jdbcType="VARCHAR" column="education"/>
        <result property="career" jdbcType="VARCHAR" column="career"/>
        <result property="introduce" jdbcType="VARCHAR" column="introduce"/>
        <result property="photoName" jdbcType="VARCHAR" column="photo_name"/>
        <result property="photoUrl" jdbcType="VARCHAR" column="photo_url"/>
        <result property="idxCrmCenter" jdbcType="INTEGER" column="idx_crm_center"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="authority" jdbcType="VARCHAR" column="authority"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="educationInfo" jdbcType="VARCHAR" column="education_info"/>
        <result property="duty" jdbcType="VARCHAR" column="duty"/>
        <result property="proName" jdbcType="VARCHAR" column="pro_name"/>
        <result property="idxCrmMetaPro" jdbcType="INTEGER" column="idx_crm_meta_pro"/>
        <result property="idxCrmMetaType" jdbcType="INTEGER" column="idx_crm_meta_type"/>
        <result property="pay" jdbcType="INTEGER" column="pay"/>
        <result property="permission" jdbcType="VARCHAR" column="permission"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="UserFileMap" type="com.carrot.user.dao.UserFileVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="idxCrmStaff" jdbcType="INTEGER" column="idx_crm_staff"/>
        <result property="fileName" jdbcType="VARCHAR" column="certificate_name"/>
        <result property="fileUrl" jdbcType="VARCHAR" column="certificate_url"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
    </resultMap>

    <resultMap id="CompanyMap" type="com.carrot.company.dao.CompanyVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="companyCode" jdbcType="VARCHAR" column="company_code"/>
        <result property="manager" jdbcType="VARCHAR" column="manager"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="consStartDate" jdbcType="VARCHAR" column="cons_start_date"/>
        <result property="consEndDate" jdbcType="VARCHAR" column="cons_end_date"/>
        <result property="totalPrice" jdbcType="INTEGER" column="total_price"/>
        <result property="price" jdbcType="INTEGER" column="price"/>
        <result property="consCount" jdbcType="INTEGER" column="cons_count"/>
        <result property="testYn" jdbcType="VARCHAR" column="test_yn"/>
        <result property="familyYn" jdbcType="VARCHAR" column="family_yn"/>
        <result property="type" jdbcType="VARCHAR" column="type"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="ClientMap" type="com.carrot.client.dao.ClientVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="clientCode" jdbcType="VARCHAR" column="client_code"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="nickName" jdbcType="VARCHAR" column="nick_name"/>
        <result property="gender" jdbcType="VARCHAR" column="gender"/>
        <result property="birth" jdbcType="VARCHAR" column="birth"/>
        <result property="ageRange" jdbcType="VARCHAR" column="age_range"/>
        <result property="email" jdbcType="VARCHAR" column="email"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="idxCrmCompany" jdbcType="VARCHAR" column="idx_crm_company"/>
        <result property="idxCrmMetaRoute" jdbcType="VARCHAR" column="idx_crm_meta_route"/>
        <result property="idxCrmCenter" jdbcType="INTEGER" column="idx_crm_center"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="idxCrmStaff" jdbcType="INTEGER" column="idx_crm_staff"/>
        <result property="idxCrmMetaType" jdbcType="INTEGER" column="idx_crm_meta_type"/>
        <result property="idxCrmMetaProduct" jdbcType="INTEGER" column="idx_crm_meta_product"/>
        <result property="consCount" jdbcType="INTEGER" column="cons_count"/>
        <result property="consCountUse" jdbcType="INTEGER" column="cons_count_use"/>
        <result property="consCountRest" jdbcType="INTEGER" column="cons_count_rest"/>
        <result property="clientType" jdbcType="VARCHAR" column="client_type"/>
        <result property="eapHopeDate" jdbcType="DATE" column="eap_hope_date"/>
        <result property="eapHopeArea" jdbcType="VARCHAR" column="eap_hope_area"/>
        <result property="eapHopeArea2" jdbcType="VARCHAR" column="eap_hope_area2"/>
        <result property="eapRel" jdbcType="VARCHAR" column="eap_rel"/>
        <result property="eapProcessStatus" jdbcType="VARCHAR" column="eap_process_status"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="typeName" jdbcType="VARCHAR" column="type_name"/>
        <result property="productName" jdbcType="VARCHAR" column="product_name"/>
        <result property="eapYn" jdbcType="VARCHAR" column="eap_YN"/>
        <result property="eapType" jdbcType="VARCHAR" column="eap_type"/>
        <result property="eapStatus" jdbcType="VARCHAR" column="eap_status"/>
        <result property="clientStatus" jdbcType="VARCHAR" column="client_status"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="subjectName" jdbcType="VARCHAR" column="subject_name"/>
        <result property="idxCrmMetaSubject" jdbcType="VARCHAR" column="idx_crm_meta_subject"/>
        <result property="routeName" jdbcType="VARCHAR" column="route_name"/>
        <result property="status" jdbcType="VARCHAR" column="status"/>
        <result property="gubun" jdbcType="VARCHAR" column="gubun"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="consDate" jdbcType="VARCHAR" column="cons_date"/>
        <result property="goal" jdbcType="VARCHAR" column="goal"/>
        <result property="plan" jdbcType="VARCHAR" column="plan"/>
        <result property="productPrice" jdbcType="INTEGER" column="product_price"/>
        <result property="aCnt" jdbcType="INTEGER" column="a_cnt"/>
        <result property="pCnt" jdbcType="INTEGER" column="p_cnt"/>
        <result property="eCnt" jdbcType="INTEGER" column="e_cnt"/>
        <result property="hCnt" jdbcType="INTEGER" column="h_cnt"/>
        <result property="nCnt" jdbcType="INTEGER" column="n_cnt"/>
        <result property="etcPrice" jdbcType="INTEGER" column="etc_price"/>
        <result property="idxCrmPerson" jdbcType="INTEGER" column="idx_crm_person"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="PurchaseMap" type="com.carrot.client.dao.PurchaseVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="idxCrmClient" jdbcType="INTEGER" column="idx_crm_client"/>
        <result property="idxCrmCompany" jdbcType="INTEGER" column="idx_crm_company"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="clientType" jdbcType="VARCHAR" column="client_type"/>
        <result property="status" jdbcType="VARCHAR" column="status"/>
        <result property="purDate" jdbcType="VARCHAR" column="pur_date"/>
        <result property="purPrice" jdbcType="INTEGER" column="pur_price"/>
        <result property="price" jdbcType="INTEGER" column="price"/>
        <result property="purPayWay" jdbcType="VARCHAR" column="pur_pay_way"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="clientCode" jdbcType="VARCHAR" column="client_code"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="idxCrmCenter" jdbcType="INTEGER" column="idx_crm_center"/>
        <result property="consCount" jdbcType="INTEGER" column="cons_count"/>
        <result property="consCountUse" jdbcType="INTEGER" column="cons_count_use"/>
        <result property="purCash" jdbcType="INTEGER" column="pur_cash"/>
        <result property="purCard" jdbcType="INTEGER" column="pur_card"/>
        <result property="purTexBill" jdbcType="INTEGER" column="pur_tex_bill"/>
        <result property="purRefund" jdbcType="INTEGER" column="pur_refund"/>
        <result property="purGiftcard" jdbcType="INTEGER" column="pur_giftcard"/>
        <result property="purReceivable" jdbcType="INTEGER" column="pur_receivable"/>
        <result property="purTotal" jdbcType="INTEGER" column="pur_total"/>
        <result property="gubun" jdbcType="VARCHAR" column="gubun"/>
        <result property="clientName" jdbcType="VARCHAR" column="client_name"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="CenterMap" type="com.carrot.center.dao.CenterVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="post" jdbcType="VARCHAR" column="post"/>
        <result property="address" jdbcType="VARCHAR" column="address"/>
        <result property="detailAddress" jdbcType="VARCHAR" column="detail_address"/>
        <result property="mainNumber" jdbcType="VARCHAR" column="main_number"/>
        <result property="id" jdbcType="DATE" column="id"/>
        <result property="centerCap" jdbcType="VARCHAR" column="center_cap"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="consRoom" jdbcType="INTEGER" column="cons_room"/>
        <result property="playRoom" jdbcType="INTEGER" column="play_room"/>
        <result property="purType" jdbcType="VARCHAR" column="pur_type"/>
        <result property="consPrice" jdbcType="INTEGER" column="cons_price"/>
        <result property="consService" jdbcType="VARCHAR" column="cons_service"/>
        <result property="centerPhotoName1" jdbcType="VARCHAR" column="center_photo_name1"/>
        <result property="centerPhotoUrl1" jdbcType="VARCHAR" column="center_photo_url1"/>
        <result property="centerPhotoName2" jdbcType="VARCHAR" column="center_photo_name2"/>
        <result property="centerPhotoUrl2" jdbcType="VARCHAR" column="center_photo_url2"/>
        <result property="centerPhotoName3" jdbcType="VARCHAR" column="center_photo_name3"/>
        <result property="centerPhotoUrl3" jdbcType="VARCHAR" column="center_photo_url3"/>
        <result property="centerRegName" jdbcType="VARCHAR" column="center_reg_name"/>
        <result property="centerRegUrl" jdbcType="VARCHAR" column="center_reg_url"/>
        <result property="centerBankName" jdbcType="VARCHAR" column="center_bank_name"/>
        <result property="centerBankUrl" jdbcType="VARCHAR" column="center_bank_url"/>
        <result property="homepage" jdbcType="VARCHAR" column="homepage"/>
        <result property="permission" jdbcType="VARCHAR" column="permission"/>
        <result property="contractEndYn" jdbcType="VARCHAR" column="contract_end_yn"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>

    </resultMap>

    <resultMap id="ReservationMap" type="com.carrot.cons.dao.ReservationVO">
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="idxCrmClient" jdbcType="INTEGER" column="idx_crm_client"/>
        <result property="idxCrmMetaProduct" jdbcType="INTEGER" column="idx_crm_meta_product"/>
        <result property="name" jdbcType="VARCHAR" column="name"/>
        <result property="clientCode" jdbcType="VARCHAR" column="client_code"/>
        <result property="typeName" jdbcType="VARCHAR" column="type_name"/>
        <result property="reservationStatus" jdbcType="VARCHAR" column="reservation_status"/>
        <result property="consDate" jdbcType="DATE" column="cons_Date"/>
        <result property="consTime" jdbcType="VARCHAR" column="cons_time"/>
        <result property="memo" jdbcType="VARCHAR" column="memo"/>
        <result property="idxCrmStaff" jdbcType="INTEGER" column="idx_crm_staff"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="idxCrmCenter" jdbcType="INTEGER" column="idx_crm_center"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="reportYn" jdbcType="VARCHAR" column="report_yn"/>
        <result property="consNum" jdbcType="INTEGER" column="cons_num"/>
        <result property="total" jdbcType="INTEGER" column="total"/>
        <result property="normal" jdbcType="INTEGER" column="normal"/>
        <result property="gamble" jdbcType="INTEGER" column="gamble"/>
        <result property="crime" jdbcType="INTEGER" column="crime"/>
        <result property="eap" jdbcType="INTEGER" column="eap"/>
        <result property="realEap" jdbcType="INTEGER" column="real_eap"/>
        <result property="test" jdbcType="INTEGER" column="test"/>
        <result property="opinion" jdbcType="INTEGER" column="opinion"/>
        <result property="etc" jdbcType="INTEGER" column="etc"/>
        <result property="gubunName" jdbcType="VARCHAR" column="gubun_name"/>
        <result property="consCountUse" jdbcType="INTEGER" column="cons_count_use"/>
        <result property="idxCrmStaffCreate" jdbcType="INTEGER" column="idx_crm_staff_create"/>
        <result property="createStaff" jdbcType="VARCHAR" column="create_staff"/>
        <result property="idxCrmStaffUpdate" jdbcType="INTEGER" column="idx_crm_staff_update"/>
        <result property="updateStaff" jdbcType="VARCHAR" column="update_staff"/>
        <result property="phone" jdbcType="VARCHAR" column="phone"/>
        <result property="clientType" jdbcType="VARCHAR" column="client_type"/>
        <result property="idxCrmCompany" jdbcType="INTEGER" column="idx_crm_company"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
        <result property="contactType" jdbcType="VARCHAR" column="contact_type"/>
        <result property="firstDate" jdbcType="DATE" column="first_date"/>
    </resultMap>

    <resultMap id="ExpensesMap" type="com.carrot.admin.dao.ExpensesVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="expensesName" jdbcType="VARCHAR" column="expenses_name"/>
        <result property="expensesCompanyName" jdbcType="VARCHAR" column="expenses_company_name"/>
        <result property="expText" jdbcType="VARCHAR" column="exp_text"/>
        <result property="expPrice" jdbcType="INTEGER" column="exp_price"/>
        <result property="expensesDate" jdbcType="VARCHAR" column="expenses_date"/>
        <result property="idxCrmCenter" jdbcType="INTEGER" column="idx_crm_center"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="expensesMemo" jdbcType="VARCHAR" column="expenses_memo"/>
        <result property="expensesType" jdbcType="VARCHAR" column="expenses_type"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
    </resultMap>

    <resultMap id="ReportMap" type="com.carrot.cons.dao.ReportVO">
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="idxReservation" jdbcType="INTEGER" column="idx_reservation"/>
        <result property="idxReport" jdbcType="INTEGER" column="idx_report"/>
        <result property="idxCrmClient" jdbcType="INTEGER" column="idx_crm_client"/>
        <result property="idxGenreMeta" jdbcType="INTEGER" column="idx_genre_meta"/>
        <result property="idxTypeMeta" jdbcType="INTEGER" column="idx_type_meta"/>
        <result property="idxAgendaFirst" jdbcType="INTEGER" column="idx_agenda_first"/>
        <result property="idxAgendaSecond" jdbcType="INTEGER" column="idx_agenda_second"/>
        <result property="idxCrmStaff" jdbcType="INTEGER" column="idx_crm_staff"/>
        <result property="idxCrmReservation" jdbcType="INTEGER" column="idx_crm_reservation"/>
        <result property="idxGenreMeta" jdbcType="INTEGER" column="idx_genre_meta"/>
        <result property="idxTypeMeta" jdbcType="INTEGER" column="idx_type_meta"/>
        <result property="permission" jdbcType="VARCHAR" column="permission"/>
        <result property="consOpinion" jdbcType="INTEGER" column="cons_opinion"/>
        <result property="mentalTest" jdbcType="VARCHAR" column="mental_test"/>
        <result property="nextPlan" jdbcType="VARCHAR" column="next_plan"/>
        <result property="consContents" jdbcType="VARCHAR" column="cons_contents"/>
        <result property="attachFileName" jdbcType="VARCHAR" column="attach_file_name"/>
        <result property="attachFileUrl" jdbcType="VARCHAR" column="attach_file_url"/>
        <result property="processStatus" jdbcType="VARCHAR" column="process_status"/>
        <result property="idxCrmMetaDanger" jdbcType="INTEGER" column="idx_crm_meta_danger"/>
        <result property="dangerStepTitle" jdbcType="VARCHAR" column="danger_step_title"/>
        <result property="dangerStepInfo" jdbcType="VARCHAR" column="danger_step_info"/>
        <result property="eapYn" jdbcType="VARCHAR" column="eap_YN"/>
        <result property="eapType" jdbcType="VARCHAR" column="eap_type"/>
        <result property="goal" jdbcType="VARCHAR" column="goal"/>
        <result property="plan" jdbcType="VARCHAR" column="plan"/>
        <result property="reportYn" jdbcType="VARCHAR" column="report_yn"/>
        <result property="mainProblem" jdbcType="VARCHAR" column="main_problem"/>
        <result property="clientName" jdbcType="VARCHAR" column="client_name"/>
        <result property="ageRange" jdbcType="VARCHAR" column="age_range"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="productName" jdbcType="VARCHAR" column="product_name"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="consProcess" jdbcType="VARCHAR" column="cons_process"/>
        <result property="reservationStatus" jdbcType="VARCHAR" column="reservation_status"/>
        <result property="reservationIdxCrmStaff" jdbcType="INTEGER" column="reservation_idx_crm_staff"/>
        <result property="consCount" jdbcType="INTEGER" column="cons_count"/>
        <result property="reportDate" jdbcType="DATE" column="report_date"/>
        <result property="permissionDate" jdbcType="DATE" column="permission_date"/>
        <result property="consDate" jdbcType="DATE" column="cons_date"/>
        <result property="createDate" jdbcType="DATE" column="create_date"/>
        <result property="updateDate" jdbcType="DATE" column="update_date"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="titleType" jdbcType="VARCHAR" column="title_type"/>
        <result property="titleAgendaFirst" jdbcType="VARCHAR" column="title_agenda_first"/>
        <result property="titleAgendaSecond" jdbcType="VARCHAR" column="title_agenda_second"/>
        <result property="requestModify" jdbcType="VARCHAR" column="request_modify"/>
    </resultMap>

    <resultMap id="StatusMap" type="com.carrot.status.dao.StatusVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="clientCnt" jdbcType="INTEGER" column="client_cnt"/>
        <result property="reservationCnt" jdbcType="INTEGER" column="reservation_cnt"/>
        <result property="reportCnt" jdbcType="INTEGER" column="report_cnt"/>
        <result property="consultCnt" jdbcType="INTEGER" column="consult_cnt"/>
        <result property="cancelRate" jdbcType="DOUBLE" column="cancel_rate"/>
        <result property="avgReportCnt" jdbcType="DOUBLE" column="avg_report_cnt"/>
        <result property="turnoverRate" jdbcType="DOUBLE" column="turnover_rate"/>
        <result property="totPrice" jdbcType="INTEGER" column="tot_price"/>
        <result property="inspectCnt" jdbcType="INTEGER" column="inspect_cnt"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="type" jdbcType="VARCHAR" column="type"/>
    </resultMap>

    <resultMap id="PayMap" type="com.carrot.pay.dao.PayVO">
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="staffName" jdbcType="VARCHAR" column="staff_name"/>
        <result property="idxCrmCenter" jdbcType="VARCHAR" column="idx_crm_center"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="permissionMonth" jdbcType="VARCHAR" column="permission_month"/>
        <result property="reportCnt" jdbcType="INTEGER" column="report_cnt"/>
        <result property="price" jdbcType="INTEGER" column="price"/>
        <result property="etcPrice" jdbcType="INTEGER" column="etc_price"/>
        <result property="staffPay" jdbcType="INTEGER" column="staff_pay"/>
        <result property="incomeTax" jdbcType="INTEGER" column="income_tax"/>
        <result property="localIncomeTax" jdbcType="INTEGER" column="local_income_tax"/>
        <result property="realStaffPay" jdbcType="INTEGER" column="real_staff_pay"/>
        <result property="sumConsPrice" jdbcType="INTEGER" column="sum_cons_price"/>
        <result property="consPrice" jdbcType="INTEGER" column="cons_price"/>
        <result property="priceType" jdbcType="VARCHAR" column="price_type"/>
        <result property="realSumConsPrice" jdbcType="INTEGER" column="real_sum_cons_price"/>
        <result property="permissionDate" jdbcType="DATE" column="permission_date"/>
        <result property="consDate" jdbcType="DATE" column="cons_date"/>
        <result property="clientName" jdbcType="VARCHAR" column="client_name"/>
        <result property="gubun" jdbcType="VARCHAR" column="gubun"/>
        <result property="productName" jdbcType="VARCHAR" column="product_name"/>
        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
    </resultMap>

    <resultMap id="CompanyStaticPersonMap" type="com.carrot.cons.dao.CompanyStaticPersonVO">
        <!--명-->
        <result property="genderMan" jdbcType="INTEGER" column="gender_man"/>
        <result property="genderWoman" jdbcType="INTEGER" column="gender_woman"/>
        <result property="genderNone" jdbcType="INTEGER" column="gender_none"/>
        <result property="age10" jdbcType="INTEGER" column="age10"/>
        <result property="age20" jdbcType="INTEGER" column="age20"/>
        <result property="age30" jdbcType="INTEGER" column="age30"/>
        <result property="age40" jdbcType="INTEGER" column="age40"/>
        <result property="age50" jdbcType="INTEGER" column="age50"/>
        <result property="ageNone" jdbcType="INTEGER" column="age_none"/>

        <!--회-->
        <result property="countMan" jdbcType="INTEGER" column="count_man"/>
        <result property="countWoman" jdbcType="INTEGER" column="count_woman"/>
        <result property="countGenderNone" jdbcType="INTEGER" column="count_gender_none"/>
        <result property="countAge10" jdbcType="INTEGER" column="count_age10"/>
        <result property="countAge20" jdbcType="INTEGER" column="count_age20"/>
        <result property="countAge30" jdbcType="INTEGER" column="count_age30"/>
        <result property="countAge40" jdbcType="INTEGER" column="count_age40"/>
        <result property="countAge50" jdbcType="INTEGER" column="count_age50"/>
        <result property="countAgeNone" jdbcType="INTEGER" column="count_age_none"/>


        <result property="newPersonCnt" jdbcType="INTEGER" column="new_person_cnt"/>
        <result property="oldPersonCnt" jdbcType="INTEGER" column="old_person_cnt"/>
        <result property="totalPersonCnt" jdbcType="INTEGER" column="total_person_cnt"/>
    </resultMap>


    <resultMap id="CompanyStaticReportMap" type="com.carrot.cons.dao.CompanyStaticReportVO">
        <result property="totalReportCnt" jdbcType="INTEGER" column="total_report_cnt"/>
        <result property="newReportCnt" jdbcType="INTEGER" column="new_report_cnt"/>
        <result property="oldReportCnt" jdbcType="INTEGER" column="old_report_cnt"/>
        <result property="danger1st" jdbcType="INTEGER" column="danger1st"/>
        <result property="danger2nd" jdbcType="INTEGER" column="danger2nd"/>
        <result property="danger3rd" jdbcType="INTEGER" column="danger3rd"/>
        <result property="danger4th" jdbcType="INTEGER" column="danger4th"/>
        <result property="dangerNone" jdbcType="INTEGER" column="danger_none"/>
        <result property="genrePsy" jdbcType="INTEGER" column="genre_psy"/>
        <result property="genrePerson" jdbcType="INTEGER" column="genre_person"/>
        <result property="genrePlay" jdbcType="INTEGER" column="genre_play"/>
        <result property="genreOther" jdbcType="INTEGER" column="genre_other"/>
        <result property="genreNone" jdbcType="INTEGER" column="genre_none"/>
        <result property="typeFace" jdbcType="INTEGER" column="type_face"/>
        <result property="typeVideo" jdbcType="INTEGER" column="type_video"/>
        <result property="typePhone" jdbcType="INTEGER" column="type_phone"/>
        <result property="typeChat" jdbcType="INTEGER" column="type_chat"/>
        <result property="typeVisit" jdbcType="INTEGER" column="type_visit"/>
        <result property="typeReside" jdbcType="INTEGER" column="type_reside"/>
        <result property="typeNone" jdbcType="INTEGER" column="type_none"/>

        <result property="agenda15" jdbcType="INTEGER" column="agenda15"/>
        <result property="agenda16" jdbcType="INTEGER" column="agenda16"/>
        <result property="agenda17" jdbcType="INTEGER" column="agenda17"/>
        <result property="agenda18" jdbcType="INTEGER" column="agenda18"/>
        <result property="agenda19" jdbcType="INTEGER" column="agenda19"/>
        <result property="agenda20" jdbcType="INTEGER" column="agenda20"/>
        <result property="agenda21" jdbcType="INTEGER" column="agenda21"/>
        <result property="agenda22" jdbcType="INTEGER" column="agenda22"/>
        <result property="agenda23" jdbcType="INTEGER" column="agenda23"/>
        <result property="agenda24" jdbcType="INTEGER" column="agenda24"/>
        <result property="agenda25" jdbcType="INTEGER" column="agenda25"/>
        <result property="agenda26" jdbcType="INTEGER" column="agenda26"/>
        <result property="agenda27" jdbcType="INTEGER" column="agenda27"/>
        <result property="agenda28" jdbcType="INTEGER" column="agenda28"/>
        <result property="agenda29" jdbcType="INTEGER" column="agenda29"/>

        <result property="agenda30" jdbcType="INTEGER" column="agenda30"/>
        <result property="agenda31" jdbcType="INTEGER" column="agenda31"/>
        <result property="agenda32" jdbcType="INTEGER" column="agenda32"/>
        <result property="agenda33" jdbcType="INTEGER" column="agenda33"/>
        <result property="agenda34" jdbcType="INTEGER" column="agenda34"/>
        <result property="agenda35" jdbcType="INTEGER" column="agenda35"/>
        <result property="agenda36" jdbcType="INTEGER" column="agenda36"/>
        <result property="agenda37" jdbcType="INTEGER" column="agenda37"/>
        <result property="agenda38" jdbcType="INTEGER" column="agenda38"/>
        <result property="agenda39" jdbcType="INTEGER" column="agenda39"/>
        <result property="agenda40" jdbcType="INTEGER" column="agenda40"/>
        <result property="agenda41" jdbcType="INTEGER" column="agenda41"/>
        <result property="agenda42" jdbcType="INTEGER" column="agenda42"/>
        <result property="agenda43" jdbcType="INTEGER" column="agenda43"/>
        <result property="agenda44" jdbcType="INTEGER" column="agenda44"/>

    </resultMap>


    <resultMap id="CompanyStaticReportMap2" type="com.carrot.cons.dao.CompanyStaticReport2VO">
        <!--위험단계 별 명수-->
        <result property="perDanger1st" jdbcType="INTEGER" column="per_danger1st"/>
        <result property="perDanger2nd" jdbcType="INTEGER" column="per_danger2nd"/>
        <result property="perDanger3rd" jdbcType="INTEGER" column="per_danger3rd"/>
        <result property="perDanger4th" jdbcType="INTEGER" column="per_danger4th"/>
        <result property="perDangerNone" jdbcType="INTEGER" column="per_danger_none"/>

        <!--회기유형 별 명수-->
        <result property="perGenrePsy" jdbcType="INTEGER" column="per_Genre_psy"/>
        <result property="perGenrePerson" jdbcType="INTEGER" column="per_Genre_person"/>
        <result property="perGenrePlay" jdbcType="INTEGER" column="per_Genre_play"/>
        <result property="perGenreOther" jdbcType="INTEGER" column="per_Genre_other"/>
        <result property="perGenreNone" jdbcType="INTEGER" column="per_Genre_none"/>

        <!--상담형태 별 명수 -->
        <result property="perTypeFace" jdbcType="INTEGER" column="per_Type_face"/>
        <result property="perTypeVideo" jdbcType="INTEGER" column="per_Type_video"/>
        <result property="perTypePhone" jdbcType="INTEGER" column="per_Type_phone"/>
        <result property="perTypeChat" jdbcType="INTEGER" column="per_Type_chat"/>
        <result property="perTypeVisit" jdbcType="INTEGER" column="per_Type_visit"/>
        <result property="perTypeReside" jdbcType="INTEGER" column="per_Type_reside"/>
        <result property="perTypeNone" jdbcType="INTEGER" column="per_Type_none"/>

        <!--상담주제 별 명수-->
        <result property="perAgenda15" jdbcType="INTEGER" column="per_agenda15"/>
        <result property="perAgenda16" jdbcType="INTEGER" column="per_agenda16"/>
        <result property="perAgenda17" jdbcType="INTEGER" column="per_agenda17"/>
        <result property="perAgenda18" jdbcType="INTEGER" column="per_agenda18"/>
        <result property="perAgenda19" jdbcType="INTEGER" column="per_agenda19"/>
        <result property="perAgenda20" jdbcType="INTEGER" column="per_agenda20"/>
        <result property="perAgenda21" jdbcType="INTEGER" column="per_agenda21"/>
        <result property="perAgenda22" jdbcType="INTEGER" column="per_agenda22"/>
        <result property="perAgenda23" jdbcType="INTEGER" column="per_agenda23"/>
        <result property="perAgenda24" jdbcType="INTEGER" column="per_agenda24"/>
        <result property="perAgenda25" jdbcType="INTEGER" column="per_agenda25"/>
        <result property="perAgenda26" jdbcType="INTEGER" column="per_agenda26"/>
        <result property="perAgenda27" jdbcType="INTEGER" column="per_agenda27"/>
        <result property="perAgenda28" jdbcType="INTEGER" column="per_agenda28"/>
        <result property="perAgenda29" jdbcType="INTEGER" column="per_agenda29"/>
        <result property="perAgenda30" jdbcType="INTEGER" column="per_agenda30"/>
        <result property="perAgenda31" jdbcType="INTEGER" column="per_agenda31"/>
        <result property="perAgenda32" jdbcType="INTEGER" column="per_agenda32"/>
        <result property="perAgenda33" jdbcType="INTEGER" column="per_agenda33"/>
        <result property="perAgenda34" jdbcType="INTEGER" column="per_agenda34"/>
        <result property="perAgenda35" jdbcType="INTEGER" column="per_agenda35"/>
        <result property="perAgenda36" jdbcType="INTEGER" column="per_agenda36"/>
        <result property="perAgenda37" jdbcType="INTEGER" column="per_agenda37"/>
        <result property="perAgenda38" jdbcType="INTEGER" column="per_agenda38"/>
        <result property="perAgenda39" jdbcType="INTEGER" column="per_agenda39"/>
        <result property="perAgenda40" jdbcType="INTEGER" column="per_agenda40"/>
        <result property="perAgenda41" jdbcType="INTEGER" column="per_agenda41"/>
        <result property="perAgenda42" jdbcType="INTEGER" column="per_agenda42"/>
        <result property="perAgenda43" jdbcType="INTEGER" column="per_agenda43"/>
        <result property="perAgenda44" jdbcType="INTEGER" column="per_agenda44"/>
        <result property="perAgendaNone" jdbcType="INTEGER" column="per_agenda_none"/>

    </resultMap>

    <resultMap id="ExcelCompanyStaticMap" type="com.carrot.cons.dao.excelCompanyStaticVO">

        <result property="companyName" jdbcType="VARCHAR" column="company_name"/>
        <result property="centerName" jdbcType="VARCHAR" column="center_name"/>
        <result property="personName" jdbcType="VARCHAR" column="person_name"/>
        <result property="gender" jdbcType="VARCHAR" column="gender"/>
        <result property="ageRange" jdbcType="VARCHAR" column="age_range"/>
        <result property="consDate" jdbcType="VARCHAR" column="cons_date"/>
        <result property="permissionDate" jdbcType="VARCHAR" column="permission_date"/>
        <result property="danger_stepTitle" jdbcType="VARCHAR" column="danger_step_title"/>
        <result property="titleGenre" jdbcType="VARCHAR" column="title_genre"/>
        <result property="titleType" jdbcType="VARCHAR" column="title_type"/>
        <result property="titleAgendaFirst" jdbcType="VARCHAR" column="title_agenda_first"/>
        <result property="titleAgendaSecond" jdbcType="VARCHAR" column="title_agenda_second"/>
    </resultMap>

    <resultMap id="ReceptionMap" type="com.carrot.recept.dao.ReceptionVO">
        <result property="rownum" jdbcType="INTEGER" column="rownum"/>
        <result property="idx" jdbcType="INTEGER" column="idx"/>
        <result property="receptName" jdbcType="INTEGER" column="recept_name"/>
        <result property="receptGender" jdbcType="INTEGER" column="recept_gender"/>
        <result property="receptPhone" jdbcType="VARCHAR" column="recept_phone"/>
        <result property="receptEmail" jdbcType="VARCHAR" column="recept_email"/>
        <result property="receptMemo" jdbcType="VARCHAR" column="recept_memo"/>
        <result property="receptStatus" jdbcType="VARCHAR" column="recept_status"/>
        <result property="receptCreatedate" jdbcType="DATE" column="recept_createdate"/>
        <result property="receptUpdatedate" jdbcType="DATE" column="recept_updatedate"/>
        <result property="idxCrmStaffCreate" jdbcType="INTEGER" column="idx_crm_staff_create"/>
        <result property="idxCrmStaffUpdate" jdbcType="INTEGER" column="idx_crm_staff_update"/>
        <result property="createStaff" jdbcType="VARCHAR" column="create_staff"/>
        <result property="updateStaff" jdbcType="VARCHAR" column="update_staff"/>
        <result property="updateStaff" jdbcType="VARCHAR" column="update_staff"/>
    </resultMap>

    <select id="selectMemoList" parameterType="java.util.HashMap" resultMap="MemoMap">
        /* commonMapper.selectMemoList 내담자 특이사항 목록 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum,
        cm.idx
        , cm.idx_crm_person
        , cm.memo
        , cm.idx_crm_staff_create
        , IF ( cs.name IS NULL, '삭제', cs.name) as create_staff
        , CASE WHEN cs.idx_crm_center = 0 then '본원센터' WHEN cen.idx IS NULL then '-' ELSE cen.name END AS center_name
        , cs.idx_crm_center
        , cm.create_date
        FROM
        crm_memo cm
        LEFT JOIN crm_staff cs ON cm.idx_crm_staff_create = cs.idx
        LEFT JOIN crm_center cen ON cs.idx_crm_center = cen.idx
          , (SELECT @ROWNUM :=0) R
        WHERE
        idx_crm_person = #{param.idxCrmPerson}
        <if test="param.idxCrmStaff != '-1'">
            AND idx_crm_staff_create = #{param.idxCrmStaff}
        </if>
        ORDER BY create_date asc
        ) ROW ORDER BY ROW.ROWNUM DESC
    </select>

    <insert id="insertPerson" parameterType="com.carrot.client.dao.PersonVO">
        /* commonMapper.insertPerson 내담자정보 등록 */
        INSERT INTO crm_person
        (
        name
        , gender
        , birth
        , age_range
        , email
        , idx_crm_meta_route
        , phone
        , idx_crm_staff_create
        , idx_crm_staff_update
        )
        VALUES
        (
        #{name}
        , #{gender}
        , #{birth}
        , #{ageRange}
        , #{email}
        , #{idxCrmMetaRoute}
        , #{phone}
        , #{idxCrmStaffCreate}
        , #{idxCrmStaffCreate}
        )
        <selectKey keyProperty="idx" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updatePerson" parameterType="com.carrot.client.dao.PersonVO">
        /* commonMapper.updatePerson 내담자정보 수정 */
        UPDATE
            crm_person
        SET
            name = #{name}
          , gender = #{gender}
          , birth = #{birth}
          , age_range = #{ageRange}
          , email = #{email}
          , idx_crm_meta_route = #{idxCrmMetaRoute}
          , phone = #{phone}
          , idx_crm_staff_update = #{idxCrmStaffUpdate}
        WHERE
            idx = #{idx}
    </update>

    <select id="selectPerson" parameterType="java.util.HashMap" resultMap="PersonMap">
        /* commonMapper.selectPerson 내담자정보 조회 */
        SELECT
            idx
             , name
             , gender
             , birth
             , age_range
             , email
             , idx_crm_meta_route
             , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_route) as route_name
             , phone
             , idx_crm_staff_update
             , IF ( (SELECT name FROM crm_staff WHERE idx = idx_crm_staff_update) IS NULL, '삭제', (SELECT name FROM crm_staff WHERE idx = idx_crm_staff_update)) as update_staff
             , idx_crm_staff_create
             , IF ( (SELECT name FROM crm_staff WHERE idx = idx_crm_staff_create) IS NULL, '삭제', (SELECT name FROM crm_staff WHERE idx = idx_crm_staff_create)) as create_staff
        FROM
            crm_person
        WHERE
            idx = #{param.idx}
    </select>

    <select id="selectPersonList" parameterType="java.util.HashMap" resultMap="PersonMap">
        /* commonMapper.selectPersonList 내담자 목록 */
        SELECT @ROWNUM:=@ROWNUM+1 AS rownum, a.* FROM (
        SELECT
        cp.idx
        , cp.name
        , cp.gender
        , cp.birth
        , cp.age_range
        , cp.email
        , cp.idx_crm_meta_route
        , (SELECT type FROM crm_meta WHERE idx = cp.idx_crm_meta_route) as route_name
        , cp.phone
        , cp.idx_crm_staff_update
        , IF ( (SELECT name FROM crm_staff WHERE idx = cp.idx_crm_staff_update) IS NULL, '삭제', (SELECT name FROM crm_staff WHERE idx = cp.idx_crm_staff_update)) as update_staff
        , cp.idx_crm_staff_create
        , IF ( (SELECT name FROM crm_staff WHERE idx = cp.idx_crm_staff_create) IS NULL, '삭제', (SELECT name FROM crm_staff WHERE idx = cp.idx_crm_staff_create)) as create_staff
        , cp.create_date
        , cp.update_date
        , group_concat( DISTINCT cs.name separator '\n') as staff_name
        FROM
        crm_person cp
        left join crm_client cc on cp.idx = cc.idx_crm_person
        left join crm_staff cs on cc.idx_crm_staff = cs.idx
        WHERE
        1=1
        <if test="param.startDate != null and param.startDate !=''">
            <![CDATA[
            AND
                DATE_FORMAT(cp.create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
            AND
                DATE_FORMAT(cp.create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
        ]]>
        </if>
        <if test="param.idxCrmCenter != null and param.idxCrmCenter != '-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.clientStatus != null and param.clientStatus != ''">
            AND cc.client_status = #{param.clientStatus}
        </if>
        <if test="param.value != null and param.value != ''">
            AND
            ( cp.name LIKE CONCAT ('%', #{param.value}, '%') or cp.email LIKE CONCAT ('%', #{param.value}, '%') or cp.phone LIKE CONCAT ('%', #{param.value}, '%') )
        </if>
        GROUP BY cp.idx
        ORDER BY create_date ASC
        )a, (SELECT @ROWNUM:=0) AS R
        ORDER BY ROWNUM desc
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPersonListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectPersonListCount 내담자 목록 수 */
        SELECT
        COUNT(*)
        FROM
        crm_person
        WHERE
        1 = 1
        <if test="param.startDate != null and param.startDate !=''">
            <![CDATA[
		AND
			DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
        <if test="param.clientStatus != null and param.clientStatus != ''">
            AND cc.client_status = #{param.clientStatus}
        </if>
    </select>

    <insert id="insertUser" parameterType="com.carrot.user.dao.UserVO">
        /* commonMapper.insertUser 사용자정보 등록 */
        INSERT INTO crm_staff
        (
        id
        , pwd
        , name
        , gender
        , phone
        , email
        , birth
        , education
        , career
        , introduce
        , photo_name
        , photo_url
        , idx_crm_center
        , authority
        , memo
        , education_info
        , duty
        , pay
        , permission
        , idx_crm_meta_type
        , idx_crm_meta_pro
        )
        VALUES
        (
        #{id}
        , #{pwd}
        , #{name}
        , #{gender}
        , #{phone}
        , #{email}
        , #{birth}
        , #{education}
        , #{career}
        , #{introduce}
        , #{photoName}
        , #{photoUrl}
        , #{idxCrmCenter}
        , #{authority}
        , #{memo}
        , #{educationInfo}
        , #{duty}
        , #{pay}
        , #{permission}
        , #{idxCrmMetaType}
        , #{idxCrmMetaPro}
        )
        <selectKey keyProperty="idx" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="selectUser" parameterType="java.util.HashMap" resultMap="UserMap">
        /* commonMapper.selectUser 사용자 정보 조회 */
        SELECT idx
             , id
             , pwd
             , name
             , gender
             , phone
             , email
             , birth
             , education
             , career
             , introduce
             , photo_name
             , photo_url
             , idx_crm_center
             , IF(idx_crm_center = 0, '본원센터', (SELECT name FROM crm_center WHERE idx = idx_crm_center)) as center_name
             , authority
             , memo
             , education_info
             , duty
             , idx_crm_meta_pro
             , pay
             , permission
        FROM crm_staff
        WHERE idx = #{param.idx}
    </select>

    <select id="selectUserList" parameterType="java.util.HashMap" resultMap="UserMap">
        SELECT * FROM (
        /* commonMapper.selectUserList 사용자 목록 검색 */
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , idx
        , id
        , pwd
        , name
        , gender
        , phone
        , email
        , birth
        , career
        , idx_crm_center
        , IF(idx_crm_center = 0, '본원센터', (SELECT name FROM crm_center WHERE idx = idx_crm_center)) as center_name
        , duty
        , idx_crm_meta_pro
        , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_pro) AS pro_name
        , permission
        , authority
        , create_date
        FROM
        crm_staff, (SELECT @ROWNUM :=0) R
        WHERE
        authority = 'STAFF'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.name neq null and param.name != ''">
            AND name LIKE CONCAT ('%', #{param.name}, '%')
        </if>
        <if test="param.permission neq null and param.permission != ''">
            AND permission = #{param.permission}
        </if>
        <if test="param.startDate neq null and param.startDate !=''">
            <![CDATA[
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
		]]>
        </if>
        ORDER BY
        create_date ASC
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectUserListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectUserListCount 사용자 목록 수 */
        SELECT
        COUNT(*)
        FROM
        crm_staff
        WHERE
        authority = 'STAFF'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.name neq null and param.name != ''">
            AND name LIKE CONCAT ('%', #{param.name}, '%')
        </if>
        <if test="param.permission neq null and param.permission != ''">
            AND permission = #{param.permission}
        </if>
        <if test="param.startDate neq null and param.startDate !=''">
            <![CDATA[
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
		]]>
        </if>
    </select>

    <update id="updateUser" parameterType="com.carrot.user.dao.UserVO">
        /* commonMapper.updateUser 사용자 정보 수정 */
        UPDATE
            crm_staff
        SET pwd              = #{pwd}
          , name             = #{name}
          , gender           = #{gender}
          , phone            = #{phone}
          , email            = #{email}
          , birth            = #{birth}
          , education        = #{education}
          , career           = #{career}
          , introduce        = #{introduce}
          , photo_name       = #{photoName}
          , photo_url        = #{photoUrl}
          , idx_crm_center   = #{idxCrmCenter}
          , memo             = #{memo}
          , education_info   = #{educationInfo}
          , duty             = #{duty}
          , idx_crm_meta_pro = #{idxCrmMetaPro}
          , pay              = #{pay}
        WHERE idx = #{idx}

    </update>

    <insert id="insertCert" parameterType="com.carrot.user.dao.UserFileVO">
        /* commonMapper.insertCert 자격증 파일 등록 */
        INSERT INTO crm_certificate
        ( idx_crm_staff
        , certificate_name
        , certificate_url)
        VALUES ( #{idxCrmStaff}
               , #{fileName}
               , #{fileUrl})
    </insert>

    <update id="updateCert" parameterType="com.carrot.user.dao.UserFileVO">
        /* commonMapper.updateCert 자격증 파일 수정 */
        UPDATE
            crm_certificate
        SET certificate_name = #{fileName}
          , certificate_url  = #{fileUrl}
        WHERE idx = #{idx}
    </update>

    <insert id="insertCompany" parameterType="com.carrot.company.dao.CompanyVO">
        /* commonMapper.insertCompany 기업정보 등록 */
        INSERT into crm_company
        ( cons_count
        , cons_end_date
        , cons_start_date
        , family_yn
        , manager
        , memo
        , name
        , company_code
        , phone
        , price
        , test_yn
        , total_price
        , type)
        VALUES ( #{consCount}
               , #{consEndDate}
               , #{consStartDate}
               , #{familyYn}
               , #{manager}
               , #{memo}
               , #{name}
               , #{companyCode}
               , #{phone}
               , #{price}
               , #{testYn}
               , #{totalPrice}
               , #{type})
    </insert>

    <select id="selectCompanyList" parameterType="java.util.HashMap" resultMap="CompanyMap">
        /* commonMapper.selectCompanyList 기업 목록 조회 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum,
        c.*
        FROM
        crm_company c, (SELECT @ROWNUM :=0) R
        <if test="param.value neq null and param.value != ''">
            WHERE
            name LIKE CONCAT('%', #{param.value}, '%')
            OR
            manager LIKE CONCAT('%', #{param.value}, '%')
        </if>
        ORDER BY create_date ASC
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectCompanyListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectCompanyListCount 기업 목록 수 */
        SELECT
        COUNT(*)
        FROM
        crm_company
        <if test="param.value neq null and param.value != ''">
            WHERE
            name LIKE CONCAT('%', #{param.value}, '%')
            OR
            manager LIKE CONCAT('%', #{param.value}, '%')
        </if>
    </select>

    <update id="updateCompany" parameterType="com.carrot.company.dao.CompanyVO">
        /* commonMapper.updateCompany 기업정보 수정 */
        UPDATE
            crm_company
        SET cons_count      = #{consCount}
          , cons_end_date   = #{consEndDate}
          , cons_start_date = #{consStartDate}
          , family_yn       = #{familyYn}
          , manager         = #{manager}
          , memo            = #{memo}
          , phone           = #{phone}
          , price           = #{price}
          , company_code    = #{companyCode}
          , test_yn         = #{testYn}
          , total_price     = #{totalPrice}
          , type            = #{type}
        WHERE idx = #{idx}
    </update>

    <insert id="insertClient" parameterType="com.carrot.client.dao.ClientVO">
        /* commonMapper.insertClient 고객 등록*/
        INSERT
        crm_client
        (
        name
        , gender
        , birth
        , email
        , phone
        , idx_crm_company
        , idx_crm_meta_route
        , idx_crm_center
        , idx_crm_staff
        , idx_crm_meta_type
        , idx_crm_meta_product
        , cons_count
        , cons_count_use
        , cons_count_rest
        , client_code
        , client_type
        , eap_hope_area
        , eap_hope_area2
        , eap_hope_date
        , eap_rel
        , eap_process_status
        , eap_YN
        , client_status
        , idx_crm_meta_subject
        , memo
        , etc_price
        , idx_crm_staff_create
        , idx_crm_staff_update
        , idx_crm_person
        <!-- , create_date  율랴님 테스트 할 때 뭔가 date 형식 안맞다고 에러가 나서 주석 처리 함-->
        )
        VALUES
        (
        #{name}
        , #{gender}
        , #{birth}
        , #{email}
        , #{phone}
        , #{idxCrmCompany}
        , #{idxCrmMetaRoute}
        , #{idxCrmCenter}
        , #{idxCrmStaff}
        , #{idxCrmMetaType}
        , #{idxCrmMetaProduct}
        , #{consCount}
        , 0
        , #{consCountRest}
        , #{clientCode}
        , #{clientType}
        , #{eapHopeArea}
        , #{eapHopeArea2}
        , DATE_FORMAT(#{eapHopeDate}, '%Y-%m-%d %T')
        , #{eapRel}
        , #{eapProcessStatus}
        , #{eapYn}
        , #{clientStatus}
        , #{idxCrmMetaSubject}
        , #{memo}
        , #{etcPrice}
        , #{idxCrmStaffCreate}
        , #{idxCrmStaffCreate}
        , #{idxCrmPerson}
        <!-- , DATE_FORMAT(NOW(), '%Y-%m-%d %T') 율랴님 테스트 할 때 뭔가 date 형식 안맞다고 에러가 나서 주석 처리 함-->
        )
        <selectKey keyProperty="idx" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="selectChartList" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectChartList 고객차트 목록조회*/
        SELECT cc.idx
        , cp.name
        , cp.gender
        , cp.birth
        , cp.age_range
        , cp.email
        , cp.phone
        , cc.idx_crm_company
        , IF(com.name IS NULL, 'B2C', com.name) as company_name
        , cc.idx_crm_meta_route
        , (SELECT type FROM crm_meta WHERE idx = cc.idx_crm_meta_route)                               as route_name
        , cc.idx_crm_center
        , IF(cc.idx_crm_center = 0, '본원센터', (SELECT name FROM crm_center WHERE idx = cc.idx_crm_center)) as center_name
        , cc.idx_crm_staff
        , (SELECT name FROM crm_staff WHERE idx = cc.idx_crm_staff)                                   as staff_name
        , cc.idx_crm_meta_type
        , (SELECT type FROM crm_meta WHERE idx = cc.idx_crm_meta_type)                                as type_name
        , cc.idx_crm_meta_product
        , (SELECT product FROM crm_meta WHERE idx = cc.idx_crm_meta_product)                          as product_name
        , (SELECT type FROM crm_meta WHERE idx = cc.idx_crm_meta_product)                             as gubun
        , IF(cc.idx_crm_meta_product = 19, cc.etc_price, (SELECT price FROM crm_meta WHERE idx = cc.idx_crm_meta_product)) as product_price
        , cc.idx_crm_meta_subject
        , (SELECT type FROM crm_meta WHERE idx = cc.idx_crm_meta_subject)                             as subject_name
        , cc.cons_count
        , cc.cons_count_use
        , cc.cons_count_rest
        , CONCAT(IF(com.company_code IS NULL or com.company_code = '' , '', com.company_code), cc.client_code) as client_code
        , cc.client_code
        , cc.client_type
        , cc.eap_hope_area
        , cc.eap_hope_area2
        , cc.eap_hope_date
        , cc.eap_rel
        , cc.eap_process_status
        , cc.eap_YN
        , cc.client_status
        , IF(cc.eap_YN = 'Y', 'EAP', '일반')                                                            as eap_type
        , cc.memo
        , cc.goal
        , cc.plan
        , cc.etc_price
        , cc.idx_crm_person
        FROM crm_client cc
        left join crm_person cp on cc.idx_crm_person = cp.idx
        left join crm_company com on com.idx = cc.idx_crm_company
        WHERE idx_crm_person = #{param.idxCrmPerson}
        <if test="param.idxCrmStaff != '-1'">
            AND idx_crm_staff = #{param.idxCrmStaff}
        </if>
    </select>

    <select id="selectClient" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectClient 고객 조회*/
        SELECT c.idx
             , cp.name
             , cp.gender
             , cp.birth
             , cp.age_range
             , cp.email
             , cp.phone
             , c.idx_crm_company
             , com.name as company_name
             , c.idx_crm_meta_route
             , (SELECT type FROM crm_meta WHERE idx = c.idx_crm_meta_route)                               as route_name
             , c.idx_crm_center
             , IF(c.idx_crm_center = 0, '본원센터', (SELECT name FROM crm_center WHERE idx = c.idx_crm_center)) as center_name
             , c.idx_crm_staff
             , (SELECT name FROM crm_staff WHERE idx = idx_crm_staff)                                   as staff_name
             , c.idx_crm_meta_type
             , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_type)                                as type_name
             , c.idx_crm_meta_product
             , (SELECT product FROM crm_meta WHERE idx = idx_crm_meta_product)                          as product_name
             , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_product)                             as gubun
             , (SELECT price FROM crm_meta WHERE idx = idx_crm_meta_product)                            as product_price
             , c.idx_crm_meta_subject
             , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_subject)                             as subject_name
             , c.cons_count
             , c.cons_count_use
             , c.cons_count_rest
             , CONCAT(IF(com.company_code IS NULL or com.company_code = '' , '', com.company_code), c.client_code) as client_code
             , c.client_type
             , c.eap_hope_area
             , c.eap_hope_area2
             , c.eap_hope_date
             , c.eap_rel
             , c.eap_process_status
             , c.eap_YN
             , c.client_status
             , IF(c.eap_YN = 'Y', 'EAP', '일반')                                                            as eap_type
             , c.memo
             , c.goal
             , c.plan
             , c.etc_price
             , c.idx_crm_person
        FROM crm_client c
                 LEFT JOIN crm_company com on c.idx_crm_company = com.idx
                 LEFT JOIN crm_person cp on c.idx_crm_person = cp.idx
        WHERE c.idx = #{param.idx}
            limit 1
    </select>

    <select id="selectClientAll" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectClientAll 고객 전체조회*/
        SELECT
        a.idx
        , a.name
        , CONCAT ( a.name, '(', IF(a.company_name IS NULL , 'B2C', a.company_name), ' / ', a.client_code, ')', if(a.type_name IS NULL, '', CONCAT(' - ',a.type_name) ) ) as nick_name
        , a.gender
        , a.birth
        , a.email
        , a.idx_crm_company
        , a.company_name
        , a.idx_crm_meta_route
        , a.idx_crm_center
        , a.idx_crm_staff
        , a.idx_crm_meta_type
        , a.idx_crm_meta_product
        , a.cons_count
        , a.cons_count_use
        , a.cons_count_rest
        , a.client_code
        , a.client_type
        , a.eap_hope_area
        , a.eap_hope_date
        , a.eap_rel
        , a.eap_process_status
        , a.eap_YN
        , a.idx_crm_person
        , a.client_status from
        (
        SELECT
        cc.idx
        , cc.name
        , cp.gender
        , cp.birth
        , cp.email
        , cc.idx_crm_company
        , (SELECT name FROM crm_company WHERE idx = cc.idx_crm_company) as company_name
        , CONCAT(IF(com.company_code IS NULL or com.company_code = '' , '', com.company_code), cc.client_code) as client_code
        , cc.idx_crm_meta_route
        , cc.idx_crm_center
        , cc.idx_crm_staff
        , cc.idx_crm_meta_type
        , cc.idx_crm_meta_product
        , cc.cons_count
        , cc.cons_count_use
        , cc.cons_count_rest
        , cc.client_type
        , cc.eap_hope_area
        , cc.eap_hope_date
        , cc.eap_rel
        , cc.eap_process_status
        , cc.eap_YN
        , cc.client_status
        , cc.idx_crm_person
        , cm.type AS type_name
        FROM
        crm_client cc
        LEFT join crm_person cp on cc.idx_crm_person = cp.idx
        LEFT join crm_company com on com.idx = cc.idx_crm_company
        LEFT JOIN crm_meta cm ON cc.idx_crm_meta_type = cm.idx
        WHERE
        1 = 1
        <if test="param.type neq null and param.type != ''">
            AND client_type = #{param.type}
        </if>
        <if test="param.idxCrmStaff neq null and param.idxCrmStaff != '-1'">
            AND idx_crm_staff = #{param.idxCrmStaff}
        </if>
        ) a
        ORDER BY idx DESC
    </select>

    <select id="selectCounselorClientList" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectCounselorClientList 상담사의 고객 목록 조회 */
        select `cc`.`idx` AS `idx`
        ,`cc`.`client_code` AS `client_code`
        ,`cp`.`name` AS `name`
        ,`cp`.`gender` AS `gender`
        ,`cp`.`birth` AS `birth`
        ,`cp`.`age_range` AS `age_range`
        ,`cp`.`email` AS `email`
        ,`cp`.`phone` AS `phone`
        ,`cc`.`idx_crm_company` AS `idx_crm_company`
        ,`cc`.`idx_crm_center` AS `idx_crm_center`
        ,`cc`.`idx_crm_staff` AS `idx_crm_staff`
        ,if(cs.name is NULL, '삭제', cs.name) AS `staff_name`
        ,`cc`.`idx_crm_meta_type` AS `idx_crm_meta_type`
        ,`cc`.`idx_crm_meta_product` AS `idx_crm_meta_product`
        ,`cc`.`idx_crm_meta_subject` AS `idx_crm_meta_subject`
        ,`cc`.`idx_crm_meta_route` AS `idx_crm_meta_route`
        ,`cc`.`cons_count` AS `cons_count`
        ,`cc`.`cons_count_use` AS `cons_count_use`
        ,`cc`.`cons_count_rest` AS `cons_count_rest`
        ,`cc`.`client_type` AS `client_type`
        ,`cc`.`eap_hope_area` AS `eap_hope_area`
        ,`cc`.`eap_hope_date` AS `eap_hope_date`
        ,`cc`.`eap_rel` AS `eap_rel`
        ,`cc`.`eap_process_status` AS `eap_process_status`
        ,`cc`.`eap_YN` AS `eap_YN`
        ,`cc`.`create_date` AS `create_date`
        ,`cc`.`update_date` AS `update_date`
        ,`cc`.`client_status` AS `client_status`
        ,`cc`.`idx_crm_person` AS `idx_crm_person`
        ,`cm`.`category` AS `category`
        ,`cm`.`type` AS `type_name`
        ,`cm`.`product` AS `product`
        ,`cm`.`price` AS `price`
        ,date_format(`cr`.`cons_date`,'%Y-%m-%d') AS `cons_date`
        ,if(`cc`.`idx_crm_center` = 0,'본원센터',`ct`.`name`) AS `center_name`
        ,`company`.`name` AS `company_name`
        FROM
        `crm_client` `cc`
        left join `crm_meta` `cm` on`cc`.`idx_crm_meta_type` = `cm`.`idx`
        left join (select max(`cr`.`cons_date`) AS `cons_date`,`cr`.`idx_crm_client` AS `idx_crm_client` from `crm_reservation` `cr` where `cr`.`reservation_status` = '예약' group by `cr`.`idx_crm_client`) `cr` ON `cc`.`idx` = `cr`.`idx_crm_client`
        left join `crm_center` `ct` ON `cc`.`idx_crm_center` = `ct`.`idx`
        left join `crm_company` `company` on`company`.`idx` = `cc`.`idx_crm_company`
        left join `crm_person` `cp` ON `cp`.`idx` = `cc`.`idx_crm_person`
        LEFT JOIN crm_staff cs ON cc.idx_crm_staff = cs.idx
        where 1 = 1
            AND cc.eap_YN != 'Y'
        <if test="param.idxCrmStaff != '-1'">
            AND cc.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cc.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            company.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cc.client_code LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.consStartDate neq null and param.consStartDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.consStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.consEndDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.reserveStatus eq '입실|NS' and param.reserveStatus neq ''">
            AND cr2.reservation_status in ('입실','NS')
        </if>
        <if test="param.reserveStatus neq '입실|NS' and param.reserveStatus neq null and param.reserveStatus neq '' ">
            AND cr2.reservation_status ={#param.reserveStatus}
        </if>
        <if test="param.clientStatus neq null and param.clientStatus !=''">
            AND
            cc.client_status = #{param.clientStatus}
        </if>
        <![CDATA[
        AND DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_SUB(NOW(), INTERVAL 3 YEAR)
        ]]>
        ORDER BY create_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectClientList" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectClientList 고객 목록 조회 */
        SELECT a.* FROM (
        SELECT @ROWNUM:=@ROWNUM+1 AS rownum
        ,`cc`.`idx` AS `idx`
        ,`cc`.`client_code` AS `client_code`
        ,`cp`.`name` AS `name`
        ,`cp`.`gender` AS `gender`
        ,`cp`.`birth` AS `birth`
        ,`cp`.`age_range` AS `age_range`
        ,`cp`.`email` AS `email`
        ,`cp`.`phone` AS `phone`
        ,`cc`.`idx_crm_company` AS `idx_crm_company`
        ,`cc`.`idx_crm_center` AS `idx_crm_center`
        ,`cc`.`idx_crm_staff` AS `idx_crm_staff`
        ,if(cs.name is NULL, '삭제', cs.name) AS `staff_name`
        ,`cc`.`idx_crm_meta_type` AS `idx_crm_meta_type`
        ,`cc`.`idx_crm_meta_product` AS `idx_crm_meta_product`
        ,`cc`.`idx_crm_meta_subject` AS `idx_crm_meta_subject`
        ,`cc`.`idx_crm_meta_route` AS `idx_crm_meta_route`
        ,`cc`.`cons_count` AS `cons_count`
        ,`cc`.`cons_count_use` AS `cons_count_use`
        ,`cc`.`cons_count_rest` AS `cons_count_rest`
        ,`cc`.`client_type` AS `client_type`
        ,`cc`.`eap_hope_area` AS `eap_hope_area`
        ,`cc`.`eap_hope_date` AS `eap_hope_date`
        ,`cc`.`eap_rel` AS `eap_rel`
        ,`cc`.`eap_process_status` AS `eap_process_status`
        ,`cc`.`eap_YN` AS `eap_YN`
        ,`cc`.`create_date` AS `create_date`
        ,`cc`.`update_date` AS `update_date`
        ,`cc`.`client_status` AS `client_status`
        ,`cc`.`idx_crm_person` AS `idx_crm_person`
        ,`cm`.`category` AS `category`
        ,`cm`.`type` AS `type_name`
        ,`cm`.`product` AS `product`
        ,`cm`.`price` AS `price`
        ,date_format(`cr`.`cons_date`,'%Y-%m-%d') AS `cons_date`
        ,if(`cc`.`idx_crm_center` = 0,'본원센터',`ct`.`name`) AS `center_name`
        ,`company`.`name` AS `company_name`
        FROM
        `crm_client` `cc`
        left join `crm_meta` `cm` on`cc`.`idx_crm_meta_type` = `cm`.`idx`
        left join (select max(`cr`.`cons_date`) AS `cons_date`,`cr`.`idx_crm_client` AS `idx_crm_client` from `crm_reservation` `cr` where `cr`.`reservation_status` = '예약' group by `cr`.`idx_crm_client`) `cr` ON `cc`.`idx` = `cr`.`idx_crm_client`
        left join `crm_center` `ct` ON `cc`.`idx_crm_center` = `ct`.`idx`
        left join `crm_company` `company` on`company`.`idx` = `cc`.`idx_crm_company`
        left join `crm_person` `cp` ON `cp`.`idx` = `cc`.`idx_crm_person`
        LEFT JOIN crm_staff cs ON cc.idx_crm_staff = cs.idx, (SELECT @ROWNUM:=0) AS R
        WHERE
        cc.eap_YN != 'Y'
        <if test="param.idxCrmStaff != '-1'">
            AND cc.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cc.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            company.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cc.client_code LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cc.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            company.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cc.client_code LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cp.phone LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cs.name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.consStartDate neq null and param.consStartDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.consStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.consEndDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.clientStatus neq null and param.clientStatus !=''">
            AND
            cc.client_status = #{param.clientStatus}
        </if>
        <![CDATA[
        AND DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_SUB(NOW(), INTERVAL 3 YEAR)
        ]]>
        ORDER BY create_date DESC
        )a ORDER BY ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectClientListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectClientListCount 고객 목록 수 */
        SELECT COUNT(*)
        FROM
        `crm_client` `cc`
        left join `crm_meta` `cm` on`cc`.`idx_crm_meta_type` = `cm`.`idx`
        left join (select max(`cr`.`cons_date`) AS `cons_date`,`cr`.`idx_crm_client` AS `idx_crm_client` from `crm_reservation` `cr` where `cr`.`reservation_status` = '예약' group by `cr`.`idx_crm_client`) `cr` ON `cc`.`idx` = `cr`.`idx_crm_client`
        left join `crm_center` `ct` ON `cc`.`idx_crm_center` = `ct`.`idx`
        left join `crm_company` `company` on`company`.`idx` = `cc`.`idx_crm_company`
        left join `crm_person` `cp` ON `cp`.`idx` = `cc`.`idx_crm_person`
        LEFT JOIN crm_staff cs ON cc.idx_crm_staff = cs.idx, (SELECT @ROWNUM:=0) AS R
        WHERE
        cc.eap_YN != 'Y'
        <if test="param.idxCrmStaff != '-1'">
            AND cc.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cc.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            company.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cc.client_code LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cc.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            company.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cc.client_code LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cp.phone LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cs.name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.consStartDate neq null and param.consStartDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.consStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cc.create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.consEndDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.clientStatus neq null and param.clientStatus !=''">
            AND
            cc.client_status = #{param.clientStatus}
        </if>
        <![CDATA[
        AND DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_SUB(NOW(), INTERVAL 3 YEAR)
        ]]>
    </select>

    <update id="updateClient" parameterType="com.carrot.client.dao.ClientVO">
        /* commonMapper.updateClient 고객정보 수정 */
        UPDATE
            crm_client
        SET name                 = #{name}
          , gender               = #{gender}
          , birth                = DATE_FORMAT(#{birth}, '%Y-%m-%d')
          , email                = #{email}
          , phone                = #{phone}
          , idx_crm_company      = #{idxCrmCompany}
          , idx_crm_meta_route   = #{idxCrmMetaRoute}
          , idx_crm_center       = #{idxCrmCenter}
          , idx_crm_staff        = #{idxCrmStaff}
          , idx_crm_meta_type    = #{idxCrmMetaType}
          , idx_crm_meta_product = #{idxCrmMetaProduct}
          , idx_crm_meta_subject = #{idxCrmMetaSubject}
          , cons_count           = #{consCount}
          , cons_count_use       = #{consCountUse}
          , cons_count_rest      = #{consCountRest}
          , client_type          = #{clientType}
          , eap_hope_area        = #{eapHopeArea}
          , eap_hope_area2       = #{eapHopeArea2}
          , eap_hope_date        = #{eapHopeDate}
          , eap_rel              = #{eapRel}
          , eap_process_status   = #{eapProcessStatus}
          , client_status        = #{clientStatus}
          , idx_crm_meta_subject = #{idxCrmMetaSubject}
          , memo                 = #{memo}
          , etc_price            = #{etcPrice}
          , idx_crm_staff_update = #{idxCrmStaffUpdate}
          , client_code          = #{clientCode}
        WHERE idx = #{idx}
    </update>

    <insert id="insertPurchase" parameterType="com.carrot.client.dao.PurchaseVO">
        /* CommonMapper.insertPurchase 수납 정보 등록 */
        INSERT INTO crm_purchase
        ( idx_crm_client
        , idx_crm_company
        , client_type
        , status
        , name
        , pur_date
        , pur_price
        , pur_pay_way
        , memo)
        VALUES ( #{idxCrmClient}
               , #{idxCrmCompany}
               , #{clientType}
               , #{status}
               , #{name}
               , #{purDate}
               , #{purPrice}
               , #{purPayWay}
               , #{memo})
    </insert>

    <select id="selectPurchaseDetail" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseDetail 수납정보 조회에서 가격합친거 */
        SELECT idx
             , idx_crm_client
             , (SELECT client_code FROM crm_client WHERE idx = idx_crm_client) as client_code
             , idx_crm_company
             , name
             , client_type
             , pur_date
             , status
             , pur_pay_way
             , SUM(pur_price)                                                  as pur_price
             , memo
        FROM crm_purchase cp
        WHERE idx_crm_client = #{param.idxCrmClient}
        GROUP BY status
        ORDER BY create_date DESC
    </select>

    <select id="selectPurchaseB2C" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseB2C 수납정보 조회 B2C목록 */
        SELECT
        idx
        , idx_crm_client
        , idx_crm_company
        , (SELECT client_code FROM crm_client WHERE idx = idx_crm_client) as client_code
        , client_type
        , status
        , name
        , pur_date
        , pur_price
        , pur_pay_way
        , memo
        FROM
        crm_purchase
        WHERE
        client_type = 'B2C'
        AND
        idx_crm_client = #{param.idxCrmClient}
        ORDER BY create_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2CCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseB2CCount 수납정보 조회 B2C목록 수 */
        SELECT COUNT(*)
        FROM crm_purchase
        WHERE client_type = 'B2C'
          AND idx_crm_client = #{param.idxCrmClient}
        ORDER BY pur_date DESC
    </select>

    <select id="selectChartPurchaseB2C" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectChartPurchaseB2C 고객차트에서 B2C 수납내역 */
        SELECT
        *
        FROM
        crm_purchase cp
        WHERE
        idx_crm_client IN
        (
        SELECT
        idx
        FROM
        crm_client
        WHERE
        idx_crm_person = #{param.idxCrmPerson}
        AND
        client_type = 'B2C'
        )
        ORDER BY pur_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2B" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseB2B 수납정보 조회 B2B목록 */
        SELECT
        idx
        , idx_crm_client
        , idx_crm_company
        , client_type
        , status
        , name
        , pur_date
        , pur_price
        , pur_pay_way
        , memo
        FROM
        crm_purchase
        WHERE
        client_type = 'B2B'
        AND
        idx_crm_company = #{param.idxCrmCompany}
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
			AND
				DATE_FORMAT(pur_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(pur_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
        ORDER BY create_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2BCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseB2BCount 수납정보 조회 B2B목록 */
        SELECT
        COUNT(*)
        FROM
        crm_purchase
        WHERE
        client_type = 'B2B'
        AND
        idx_crm_company = #{param.idxCrmCompany}
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
			AND
				DATE_FORMAT(pur_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(pur_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
    </select>

    <update id="updatePurchase" parameterType="com.carrot.client.dao.PurchaseVO">
        /* CommonMapper.updatePurchase 수납정보 수정 */
        UPDATE
            crm_purchase
        SET pur_date    = #{purDate}
          , pur_price   = #{purPrice}
          , pur_pay_way = #{purPayWay}
          , memo        = #{memo}
        WHERE idx = #{idx}
    </update>

    <select id="selectSumPriceClient" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectSumPriceClient 가격 합친거 */
        SELECT IF(sum(pur_price) IS NULL, 0, sum(pur_price)) as pur_price
        FROM crm_purchase
        WHERE idx_crm_client = #{param.idxCrmClient}
          AND status = #{param.status}
    </select>

    <select id="selectSumPriceCompany" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectSumPriceCompany 가격 합친거 */
        SELECT IF(sum(pur_price) IS NULL, 0, sum(pur_price)) as pur_price
        FROM crm_purchase
        WHERE idx_crm_company = #{param.idxCrmCompany}
          AND status = #{param.status}
    </select>

    <select id="selectPurchaseB2CList" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseB2CList 수납 목록 조회 */
        SELECT * FROM (
        SELECT @ROWNUM:=@ROWNUM+1 AS rownum,a.* FROM (
        SELECT
        idx ,
        idx_crm_client ,
        idx_crm_company ,
        (SELECT client_code FROM crm_client WHERE idx = idx_crm_client ) as client_code ,
        (SELECT name FROM crm_company WHERE idx = idx_crm_company) as company_name ,
        name ,
        client_type ,
        pur_date ,
        status ,
        pur_pay_way ,
        pur_price,
        memo ,
        create_date
        FROM
        crm_purchase
        WHERE
        client_type = 'B2C'
        GROUP BY idx_crm_client
        ) a, (SELECT @ROWNUM :=0) R
        <if test="param.value neq null and param.value != ''">
            WHERE
            a.client_code LIKE CONCAT('%', #{param.value}, '%')
            OR
            a.name LIKE CONCAT('%', #{param.value}, '%')
        </if>
        ORDER BY create_date ASC
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2CListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseB2CListCount 수납 목록 수 */
        SELECT COUNT(*) FROM (SELECT a.* FROM (
        SELECT
        idx ,
        idx_crm_client ,
        idx_crm_company ,
        (SELECT client_code FROM crm_client WHERE idx = idx_crm_client ) as client_code ,
        (SELECT name FROM crm_company WHERE idx = idx_crm_company) as company_name ,
        name ,
        client_type ,
        pur_date ,
        status ,
        pur_pay_way ,
        pur_price ,
        memo ,
        create_date
        FROM
        crm_purchase
        WHERE
        client_type = 'B2C'
        GROUP BY idx_crm_client
        ) a
        <if test="param.value neq null and param.value != ''">
            WHERE
            a.client_code LIKE CONCAT('%', #{param.value}, '%')
            OR
            a.name LIKE CONCAT('%', #{param.value}, '%')
        </if>) b
    </select>

    <select id="selectPurchaseB2BList" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseB2BList 수납 목록 조회 */
        SELECT * FROM (
        SELECT @ROWNUM:=@ROWNUM+1 AS rownum,a.* FROM (
        SELECT
        idx ,
        idx_crm_client ,
        idx_crm_company ,
        (SELECT client_code FROM crm_client WHERE idx = idx_crm_client ) as client_code ,
        (SELECT name FROM crm_company WHERE idx = idx_crm_company) as company_name ,
        name ,
        client_type ,
        pur_date ,
        status ,
        pur_pay_way ,
        pur_price,
        memo ,
        create_date
        FROM
        crm_purchase, (SELECT @ROWNUM :=0) R
        WHERE
        client_type = 'B2B'
        GROUP BY idx_crm_company
        ) a
        <if test="param.value neq null and param.value != ''">
            WHERE
            a.company_name LIKE CONCAT('%', #{param.value}, '%')
        </if>
        ORDER BY create_date ASC ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2BListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseB2BListCount 수납 목록 수 */
        SELECT COUNT(*) FROM (SELECT a.* FROM (
        SELECT
        idx ,
        idx_crm_client ,
        idx_crm_company ,
        (SELECT client_code FROM crm_client WHERE idx = idx_crm_client ) as client_code ,
        (SELECT name FROM crm_company WHERE idx = idx_crm_company) as company_name ,
        name ,
        client_type ,
        pur_date ,
        status ,
        pur_pay_way ,
        pur_price ,
        memo ,
        create_date
        FROM
        crm_purchase
        WHERE
        client_type = 'B2B'
        GROUP BY idx_crm_company
        ) a
        <if test="param.value neq null and param.value != ''">
            WHERE
            a.company_name LIKE CONCAT('%', #{param.value}, '%')
        </if>) b
    </select>

    <select id="selectPurchaseB2BUserList" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseB2BUserList 기업수납 목록에서 고객 조회 */
        SELECT
        a.*,
        IF(a.idx_crm_center = 0, '본원센터', cct.name) as center_name
        FROM
        (
        SELECT
        cc.idx,
        cc.name,
        cc.client_code,
        cc.idx_crm_center,
        cc.cons_count ,
        cc.cons_count_use,
        (select name from crm_company where idx = #{param.idxCrmCompany}) as company_name,
        cc.create_date
        FROM
        crm_client cc
        WHERE
        idx_crm_company = #{param.idxCrmCompany}
        <if test="param.value neq null and param.value != ''">
            AND (
            cc.client_code LIKE CONCAT('%', #{param.value}, '%')
            OR
            cc.name LIKE CONCAT('%', #{param.value}, '%')
            )
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        ) a
        LEFT JOIN crm_center cct ON
        cct.idx = a.idx_crm_center
        ORDER BY create_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseB2BUserListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseB2BUserListCount 기업수납 목록에서 고객조회 수 */
        SELECT
        COUNT(*)
        FROM
        (
        SELECT
        cc.idx,
        cc.name,
        cc.client_code,
        cc.idx_crm_center,
        cc.cons_count ,
        cc.cons_count_use
        FROM
        crm_client cc
        WHERE
        idx_crm_company = #{param.idxCrmCompany}
        <if test="param.value neq null and param.value != ''">
            AND (
            cc.client_code LIKE CONCAT('%', #{param.value}, '%')
            OR
            cc.name LIKE CONCAT('%', #{param.value}, '%')
            )
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            cc.idx_crm_center = #{param.idxCrmCenter}
        </if>
        ) a
        LEFT JOIN crm_center cct ON
        cct.idx = a.idx_crm_center
    </select>

    <insert id="insertCenter" parameterType="com.carrot.center.dao.CenterVO">
        /* CommonMapper.insertCenter 센터 등록 */
        INSERT INTO
        crm_center
        (
        name
        , post
        , address
        , detail_address
        , main_number
        , center_cap
        , phone
        , cons_room
        , play_room
        , pur_type
        , cons_price
        , cons_service
        , center_photo_name1
        , center_photo_url1
        , center_photo_name2
        , center_photo_url2
        , center_photo_name3
        , center_photo_url3
        , center_reg_name
        , center_reg_url
        , center_bank_name
        , center_bank_url
        , homepage
        , permission
        )
        VALUES
        (
        #{name}
        , #{post}
        , #{address}
        , #{detailAddress}
        , #{mainNumber}
        , #{centerCap}
        , #{phone}
        , #{consRoom}
        , #{playRoom}
        , #{purType}
        , #{consPrice}
        , #{consService}
        , #{centerPhotoName1}
        , #{centerPhotoUrl1}
        , #{centerPhotoName2}
        , #{centerPhotoUrl2}
        , #{centerPhotoName3}
        , #{centerPhotoUrl3}
        , #{centerRegName}
        , #{centerRegUrl}
        , #{centerBankName}
        , #{centerBankUrl}
        , #{homepage}
        , #{permission}
        )
        <selectKey keyProperty="idx" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateCenter" parameterType="com.carrot.center.dao.CenterVO">
        /* CommonMapper.updateCenter 센터정보 수정 */
        UPDATE
            crm_center
        SET post               = #{post}
          , address            = #{address}
          , detail_address     = #{detailAddress}
          , main_number        = #{mainNumber}
          , center_cap         = #{centerCap}
          , phone              = #{phone}
          , cons_room          = #{consRoom}
          , play_room          = #{playRoom}
          , pur_type           = #{purType}
          , cons_price         = #{consPrice}
          , cons_service       = #{consService}
          , center_photo_name1 = #{centerPhotoName1}
          , center_photo_url1  = #{centerPhotoUrl1}
          , center_photo_name2 = #{centerPhotoName2}
          , center_photo_url2  = #{centerPhotoUrl2}
          , center_photo_name3 = #{centerPhotoName3}
          , center_photo_url3  = #{centerPhotoUrl3}
          , center_reg_name    = #{centerRegName}
          , center_reg_url     = #{centerRegUrl}
          , center_bank_name   = #{centerBankName}
          , center_bank_url    = #{centerBankUrl}
          , homepage           = #{homepage}
          , permission         = #{permission}
          , contract_end_yn    = #{contractEndYn}
        WHERE idx = #{idx}
    </update>

    <select id="selectCenter" parameterType="java.util.HashMap" resultMap="CenterMap">
        /* CommonMapper.selectCenter 센터정보 조회 */
        SELECT idx
             , name
             , post
             , address
             , detail_address
             , main_number
             , center_cap
             , phone
             , cons_room
             , play_room
             , pur_type
             , cons_price
             , cons_service
             , center_photo_name1
             , center_photo_url1
             , center_photo_name2
             , center_photo_url2
             , center_photo_name3
             , center_photo_url3
             , center_reg_name
             , center_reg_url
             , center_bank_name
             , center_bank_url
             , homepage
             , permission
             , contract_end_yn
        FROM crm_center
        WHERE idx = #{param.idx}
    </select>

    <select id="selectCenterList" parameterType="java.util.HashMap" resultMap="CenterMap">
        /* CommonMapper.selectCenterList 센터 목록 조회 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , cc.idx
        , cs.id
        , cc.name
        , cc.post
        , cc.address
        , cc.detail_address
        , cc.main_number
        , cc.center_cap
        , cc.phone
        , cc.cons_room
        , cc.play_room
        , cc.pur_type
        , cc.cons_price
        , cc.cons_service
        , cc.homepage
        , cc.permission
        , cc.contract_end_yn
        , cc.create_date
        FROM
        crm_center cc
        LEFT JOIN crm_staff cs ON cc.idx = cs.idx_crm_center
        , (SELECT @ROWNUM :=0) R
        WHERE
        1=1
        <if test="param.name neq null and param.name != ''">
            AND cc.name LIKE CONCAT('%', #{param.name}, '%')
        </if>
        <if test="param.permission neq null and param.permission !=''">
            AND cc.permission = #{param.permission}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            cc.idx = #{param.idxCrmCenter}
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(cc.create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(cc.create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
        ORDER BY cc.create_date ASC
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != -1">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectCenterListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectCenterListCount 센터 목록 수 */
        SELECT
        COUNT(*)
        FROM
        crm_center
        WHERE
        1=1
        <if test="param.name neq null and param.name != ''">
            AND name LIKE CONCAT('%', #{param.name}, '%')
        </if>
        <if test="param.permission neq null and param.permission !=''">
            AND permission = #{param.permission}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            idx = #{param.idxCrmCenter}
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
    </select>

    <select id="selectCenterStaffList" parameterType="java.util.HashMap" resultMap="CenterMap">
        SELECT s.NAME,
               s.gender,
               ifnull(cc.name,'본원센터'),
               cm.type AS pro_name
        FROM crm_staff s
                 LEFT JOIN crm_center cc ON s.idx_crm_center = cc.idx
                 LEFT JOIN crm_meta cm ON s.idx_crm_meta_pro = cm.idx
        ;
    </select>

    <select id="selectCenterAll" parameterType="java.util.HashMap" resultMap="CenterMap">
        /* CommonMapper.selectCenterAll 센터 전체 목록 */
        SELECT idx
             , name
             , post
             , address
             , detail_address
             , main_number
             , center_cap
             , phone
             , cons_room
             , play_room
             , pur_type
             , cons_price
             , cons_service
             , center_photo_name1
             , center_photo_url1
             , center_photo_name2
             , center_photo_url2
             , center_photo_name3
             , center_photo_url3
             , center_reg_name
             , center_reg_url
             , center_bank_name
             , center_bank_url
             , homepage
             , permission
             , contract_end_yn
        FROM crm_center
        WHERE contract_end_yn = '진행'
        ORDER BY name
    </select>

    <select id="selectExcCenterList" parameterType="java.util.HashMap" resultMap="CenterMap">
        /* CommonMapper.selectCenterAll 센터 목록 엑셀용*/
        SELECT cc.name,
               cs.id,
               SUBSTRING_INDEX(cc.address," ",2) AS address,
               cc.main_number,
               cc.phone,
               cc.cons_service,
               IF(cc.permission = 'Y','승인','미승인') AS permission
        FROM crm_center cc
                 LEFT JOIN crm_staff cs ON cc.idx = cs.idx_crm_center
        ORDER BY NAME;
    </select>

    <select id = "reservationDupCheck" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM crm_reservation
        WHERE idx_crm_staff = #{param.idxCrmStaff}
          AND
              <foreach item="value" index="key" collection="param.consTime" open="(" close=")" separator=" or " >
                  cons_time like CONCAT('%', #{value}, '%')
              </foreach>

          AND reservation_status != '당일취소'
          AND cons_date = #{param.consDate}
    </select>

    <insert id="insertReservation" parameterType="com.carrot.cons.dao.ReservationVO">
        /* commonMapper.insertReservation 상담예약 등록 */
        INSERT INTO crm_reservation
        (
	        idx_crm_client
	        , name
	        , cons_date
	        , cons_time
	        , reservation_status
	        , memo
	        , idx_crm_staff
	        , idx_crm_center
	        , report_yn
	        , idx_crm_staff_create
	        , idx_crm_staff_update
	        , idx_crm_meta_contact
        )
        VALUES (

	        #{idxCrmClient}
	        , #{name}
	        , DATE_FORMAT(#{consDate}, '%Y-%m-%d %T')
	        , #{consTime}
	        , #{reservationStatus}
	        , #{memo}
	        , #{idxCrmStaff}
	        , #{idxCrmCenter}
	        , 'N'
	        , #{idxCrmStaffCreate}
	        , #{idxCrmStaffCreate}
            , #{idxCrmMetaContact}
	       )
    </insert>

    <select id="selectReservation" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* commonMapper.selectReservation 상담예약 조회 */
        SELECT
             cr.idx
             , cr.idx_crm_client
             , cr.name
             , CONCAT(IF(com.company_code IS NULL, '', com.company_code), cc.client_code) as client_code
             , IF ( cmt.type IS NULL, '',  cmt.type) as type_name
             , IF ( cmp.type IS NULL, '',  cmp.type) as gubun_name
             , IF ( cc.cons_count_use IS NULL, 0,  cc.cons_count_use) as cons_count_use
             , IF ( cc.phone IS NULL, '',  cc.phone) as phone
             , cr.cons_date
             , cr.cons_time
             , cr.reservation_status
             , cr.memo
             , cr.idx_crm_staff
             , IF ( con.name IS NULL, '삭제', con.name )as staff_name
             , cr.idx_crm_center
             , IF(cr.idx_crm_center = 0, '본원센터',cen.name) as center_name
             , cr.report_yn
             , cr.idx_crm_staff_update
             , IF ( cs2.name IS NULL, '삭제', cs2.name) as update_staff
             , cr.idx_crm_staff_create
             , IF ( cs.name IS NULL, '삭제', cs.name) as create_staff
             , cr.create_date
             , cr.update_date
             , cr.idx_crm_meta_contact
             , IF ( cmc.type IS NULL, '',  cmc.type) as contact_type
        FROM
            crm_reservation cr
                LEFT JOIN crm_client cc on cr.idx_crm_client = cc.idx
                LEFT JOIN crm_person cp on cc.idx_crm_person = cp.idx
                LEFT JOIN crm_company com on cc.idx_crm_company = com.idx
                left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
                left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
                left join crm_center cen on cr.idx_crm_staff = cen.idx
                left join crm_staff con on cr.idx_crm_staff = con.idx
                left join crm_meta cmp on cmp.idx = cc.idx_crm_meta_product
                left join crm_meta cmt on cmt.idx = cc.idx_crm_meta_type
                left join crm_meta cmc on cmc.idx = cr.idx_crm_meta_contact
        WHERE cr.idx = #{param.idx}
        limit 1
    </select>

    <update id="updateReservation" parameterType="com.carrot.cons.dao.ReservationVO">
        /* commonMapper.updateReservation 상담예약 수정 */
        UPDATE
            crm_reservation
        SET idx_crm_client     = #{idxCrmClient}
          , name               = #{name}
          , cons_date          = #{consDate}
          , cons_time          = #{consTime}
          , reservation_status = #{reservationStatus}
          , memo               = #{memo}
          , idx_crm_staff      = #{idxCrmStaff}
          , idx_crm_center     = #{idxCrmCenter}
          , idx_crm_staff_update = #{idxCrmStaffUpdate}
          , idx_crm_meta_contact = #{idxCrmMetaContact}
        WHERE idx = #{idx}
    </update>

    <update id="updateConsCountUseMinus" parameterType="int">
        /* commonMapper.updateConsCountUseMinus 회기 차감처리 */
        /* insert - NS update - Not NS to NS */
        UPDATE
            crm_client
        SET cons_count_use     = cons_count_use-1
          , cons_count_rest    = cons_count_rest+1
        WHERE idx = #{idx}
    </update>

    <update id="updateConsCountUsePlus" parameterType="int">
        /* commonMapper.updateConsCountUsePlus 회기추가 처리 */
        /* delete - NS, update - NS to Not NS */
        UPDATE
            crm_client
        SET cons_count_use     = cons_count_use+1
          , cons_count_rest    = cons_count_rest-1
        WHERE idx = #{idx}
    </update>

    <select id="selectChartReservationList" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* CommonMapper.selectChartReservationList 상담 예약 목록 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , cr.idx
        , cr.idx_crm_client
        , cr.name
        , CONCAT(IF(com.company_code IS NULL, '', com.company_code), cc.client_code) as client_code
        , IF ( cmt.type IS NULL, '',  cmt.type) as type_name
        , IF ( cmp.type IS NULL, '',  cmp.type) as gubun_name
        , IF ( cc.cons_count_use IS NULL, 0,  cc.cons_count_use) as cons_count_use
        , IF ( cc.phone IS NULL, '',  cc.phone) as phone
        , cr.cons_date
        , cr.cons_time
        , cr.reservation_status
        , cr.memo
        , cr.idx_crm_staff
        , IF ( con.name IS NULL, '삭제', con.name )as staff_name
        , cr.idx_crm_center
        , IF(cr.idx_crm_center = 0, '본원센터',cen.name) as center_name
        , cr.report_yn
        , cr.idx_crm_staff_update
        , IF ( cs2.name IS NULL, '삭제', cs2.name) as update_staff
        , cr.idx_crm_staff_create
        , IF ( cs.name IS NULL, '삭제', cs.name) as create_staff
        , cr.create_date
        , cr.update_date
        , cr.idx_crm_meta_contact
        , IF ( cmc.type IS NULL, '',  cmc.type) as contact_type
        FROM
        crm_reservation cr

            LEFT JOIN crm_client cc on cr.idx_crm_client = cc.idx
            LEFT JOIN crm_person cp on cc.idx_crm_person = cp.idx
            LEFT JOIN crm_company com on cc.idx_crm_company = com.idx
            left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
            left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
            left join crm_center cen on cr.idx_crm_center = cen.idx
            left join crm_staff con on cr.idx_crm_staff = con.idx
            left join crm_meta cmp on cmp.idx = cc.idx_crm_meta_product
            left join crm_meta cmt on cmt.idx = cc.idx_crm_meta_type
            left join crm_meta cmc on cmc.idx = cr.idx_crm_meta_contact
        , (SELECT @ROWNUM :=0) R
        WHERE
        1 = 1
        <if test="param.idxCrmPerson neq null and param.idxCrmPerson != '-1'">
            AND idx_crm_client IN ( SELECT idx FROM crm_client WHERE idx_crm_person = #{param.idxCrmPerson})
        </if>
        <if test="param.idxCrmStaff != '-1'">
            AND cr.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        ORDER BY cons_date
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectChartReservationListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectChartReservationListCount 상담 예약 목록 수 */
        SELECT
        COUNT(*)
        FROM
        crm_reservation
        WHERE
        1 = 1
        <if test="param.idxCrmPerson neq null and param.idxCrmPerson != '-1'">
            AND	idx_crm_client IN ( SELECT idx FROM crm_client WHERE idx_crm_person = #{param.idxCrmPerson})
        </if>
        <if test="param.idxCrmStaff != '-1'">
            AND idx_crm_staff = #{param.idxCrmStaff}
        </if>
    </select>

    <select id="selectReservationList" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* CommonMapper.selectReservationList 상담 예약 목록 */
        SELECT @ROWNUM:=@ROWNUM+1 AS rownum, ROW.* FROM (
        SELECT
        cr.idx
        , cr.idx_crm_client
        , cr.name
        , IF ( cmt.type IS NULL, '',  cmt.type) as type_name
        , IF ( cmp.type IS NULL, '',  cmp.type) as gubun_name
        , IF ( a.sum_reserv_count IS NULL, 0,  a.sum_reserv_count) as cons_count_use
        , IF ( cc.phone IS NULL, '',  cc.phone) as phone
        , cr.cons_date
        , cr.cons_time
        , cr.reservation_status
        , cr.memo
        , cr.idx_crm_staff
        , IF ( con.name IS NULL, '삭제', con.name )as staff_name
        , cr.idx_crm_center
        , IF(cr.idx_crm_center = 0, '본원센터',cen.name) as center_name
        , cr.report_yn
        , cr.idx_crm_staff_update
        , IF ( cs2.name IS NULL, '삭제', cs2.name) as update_staff
        , cr.idx_crm_staff_create
        , IF ( cs.name IS NULL, '삭제', cs.name) as create_staff
        , cc.client_type
        , cc.idx_crm_company as idx_crm_company
        , IF(com.name IS NULL, 'B2C', com.name) as company_name
        , cr.create_date
        , cr.update_date
        , cr.idx_crm_meta_contact
        , IF ( cmc.type IS NULL, '',  cmc.type) as contact_type
        , a.first_date
        , CASE when cr.cons_date = a.first_date then 1 else 0 end as cons_num
        FROM
        crm_reservation cr
            left join crm_client cc on cr.idx_crm_client = cc.idx
            left join crm_company com on cc.idx_crm_company = com.idx
            left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
            left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
            left join crm_center cen on cr.idx_crm_staff = cen.idx
            left join crm_staff con on cr.idx_crm_staff = con.idx
            left join crm_meta cmp on cmp.idx = cc.idx_crm_meta_product
            left join crm_meta cmt on cmt.idx = cc.idx_crm_meta_type
            left join crm_meta cmc on cmc.idx = cr.idx_crm_meta_contact
            left join (
                SELECT
                SUM((CHAR_LENGTH(cr.cons_time)-CHAR_LENGTH(REPLACE(cr.cons_time,'/',''))))*0.5 AS sum_reserv_count, cc.idx_crm_person, MIN(cr.cons_date) AS first_date
                FROM crm_reservation cr
                JOIN crm_client cc ON cr.idx_crm_client = cc.idx
                WHERE cr.reservation_status IN ('입실', 'NS')
                GROUP BY cc.idx_crm_person
            ) a on cc.idx_crm_person = a.idx_crm_person
          , (SELECT @ROWNUM:=0) AS R
        WHERE
        1 = 1
        <choose>
            <when test="param.type eq '예약'">
                AND cr.reservation_status = '예약'
            </when>
            <when test="param.type neq null and param.type != '' and param.type != '예약'">
                AND cr.reservation_status IN ('예약', 'NS')
            </when>
        </choose>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND cr.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.consStartDate neq null and param.consStartDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cr.cons_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.consStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cr.cons_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.consEndDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.idxCrmStaff neq null and param.idxCrmStaff != '-1'">
            AND
            cr.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            cr.name LIKE CONCAT('%', #{param.value}, '%')
            OR
            IF ( con.name IS NULL, '삭제', con.name ) LIKE CONCAT('%', #{param.value}, '%')
            )
        </if>
        <choose>
            <when test = "param.orderType == 'idx'">
                ORDER BY cr.idx asc
            </when>
            <when test = "param.orderType == 'cons_date'">
                ORDER BY cr.cons_date asc, cr.cons_time desc
            </when>
            <when test = "param.orderType == 'reservMonth'">
                ORDER BY substr(cr.cons_time, 1,2) DESC
            </when>
            <otherwise>
                ORDER BY substr(cr.cons_time, 1,2)
            </otherwise>
        </choose>
        ) ROW ORDER BY ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectReservationListFirst" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* CommonMapper.selectReservationListFirst 상담예약 첫상담 */
        SELECT
            *
        FROM
            crm_reservation cr
        WHERE
            (
                SELECT
                    cons_date
                FROM
                    crm_reservation cr2

                WHERE idx_crm_client = #{param.idxCrmClient}
                order by
                    cons_date ASC
            LIMIT 1
            ) = cr.cons_date
          AND
            idx_crm_client = #{param.idxCrmClient}
    </select>

    <select id="selectReservationListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectReservationListCount 상담예약 목록 수 */
        SELECT COUNT(*) FROM (
        SELECT
        idx
        , idx_crm_client
        , name
        , ( SELECT type FROM crm_meta WHERE idx = ( SELECT idx_crm_meta_type FROM crm_client WHERE idx = idx_crm_client
        )) as type_name
        , cons_date
        , cons_time
        , reservation_status
        , memo
        , idx_crm_staff
        , ( SELECT name FROM crm_staff WHERE idx = idx_crm_staff ) as staff_name
        , idx_crm_center
        , IF(idx_crm_center = 0, '본원센터',(SELECT name FROM crm_center WHERE idx = idx_crm_center )) as center_name
        FROM
        crm_reservation
        WHERE
        1 = 1
        <if test="param.type neq null and param.type != ''">
            AND reservation_status IN ('예약', 'NS')
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.consStartDate neq null and param.consStartDate != ''">
            <![CDATA[
					AND
						DATE_FORMAT(cons_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.consStartDate}, '%Y-%m-%d')
					AND
						DATE_FORMAT(cons_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.consEndDate}, '%Y-%m-%d')
				]]>
        </if>
        <if test="param.idxCrmStaff neq null and param.idxCrmStaff != '-1'">
            AND
            idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            name LIKE CONCAT('%', #{param.value}, '%')
            OR
            IF ( ( SELECT name FROM crm_staff WHERE idx = idx_crm_staff ) IS NULL, '삭제', ( SELECT name FROM crm_staff WHERE idx = idx_crm_staff ) ) LIKE CONCAT('%', #{param.value}, '%')
            )
        </if>
        ) a
    </select>

    <insert id="insertExpenses" parameterType="com.carrot.admin.dao.ExpensesVO">
        /* commonMapper.insertExpenses 지출 등록 */
        INSERT INTO crm_expenses
        ( expenses_name
        , expenses_company_name
        , exp_text
        , exp_price
        , expenses_date
        , idx_crm_center
        , center_name
        , expenses_memo
        , expenses_type)
        VALUES ( #{expensesName}
               , #{expensesCompanyName}
               , #{expText}
               , #{expPrice}
               , #{expensesDate}
               , #{idxCrmCenter}
               , #{centerName}
               , #{expensesMemo}
               , #{expensesType})
    </insert>

    <select id="selectExpenses" parameterType="java.util.HashMap" resultMap="ExpensesMap">
        /* commonMapper.selectExpenses 지출 조회 */
        SELECT idx
             , expenses_name
             , expenses_company_name
             , exp_text
             , exp_price
             , expenses_date
             , idx_crm_center
             , center_name
             , expenses_memo
        FROM crm_expenses
        WHERE idx = #{param.idx}
    </select>

    <update id="updateExpenses" parameterType="com.carrot.admin.dao.ExpensesVO">
        /* commonMapper.updateExpenses 지출 수정 */
        UPDATE
            crm_expenses
        SET expenses_name         = #{expensesName}
          , expenses_company_name = #{expensesCompanyName}
          , exp_text              = #{expText}
          , exp_price             = #{expPrice}
          , expenses_date         = #{expensesDate}
          , idx_crm_center        = #{idxCrmCenter}
          , center_name           = #{centerName}
          , expenses_memo         = #{expensesMemo}
        WHERE idx = #{idx}
    </update>

    <select id="selectExpensesB2CList" parameterType="java.util.HashMap" resultMap="ExpensesMap">
        /* commonMapper.selectExpensesB2CList 지출관리 B2C목록 조회 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , idx
        , expenses_name
        , expenses_company_name
        , exp_text
        , exp_price
        , expenses_date
        , idx_crm_center
        , center_name
        , expenses_memo
        , expenses_type
        FROM
        crm_expenses, (SELECT @ROWNUM :=0) R
        WHERE
        expenses_type = 'B2C'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            expenses_name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            exp_text LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
        ORDER BY create_date ASC
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectExpensesB2CListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectExpensesB2CListCount 지출관리 B2C목록 조회 */
        SELECT
        COUNT(*)
        FROM
        crm_expenses
        WHERE
        expenses_type = 'B2C'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            expenses_name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            exp_text LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
    </select>

    <select id="selectExpensesB2BList" parameterType="java.util.HashMap" resultMap="ExpensesMap">
        /* commonMapper.selectExpensesB2BList 지출관리 B2B목록 조회 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , idx
        , expenses_name
        , expenses_company_name
        , exp_text
        , exp_price
        , expenses_date
        , idx_crm_center
        , center_name
        , expenses_memo
        , expenses_type
        FROM
        crm_expenses, (SELECT @ROWNUM :=0) R
        WHERE
        expenses_type = 'B2B'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            expenses_company_name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            exp_text LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
        ORDER BY create_date asc
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectExpensesB2BListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectExpensesB2BListCount 지출관리 B2B목록 조회 */
        SELECT
        COUNT(*)
        FROM
        crm_expenses
        WHERE
        expenses_type = 'B2B'
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            expenses_company_name LIKE CONCAT ('%', #{param.value}, '%')
        </if>
        <if test="param.startDate neq null and param.startDate != ''">
            <![CDATA[
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
		AND
			DATE_FORMAT(expenses_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
	]]>
        </if>
    </select>

    <select id="selectReport" parameterType="java.util.HashMap" resultMap="ReportMap">
        /* commonMapper.selectReport 상담일지 조회 */
        SELECT a.*,
               cm.danger_step_info
        FROM (
                 SELECT cr.idx
                      , cr.idx_crm_client
                      , (SELECT name FROM crm_client WHERE idx = cr.idx_crm_client) as client_name
                      , cp.age_range
                      , cr.idx_crm_staff
                      , (SELECT name FROM crm_staff WHERE idx = cr.idx_crm_staff)   as staff_name
                      , cr.idx_crm_reservation
                      , cr.permission
                      , cr.cons_opinion
                      , cr.mental_test
                      , cr.next_plan
                      , cr.cons_contents
                      , cr.attach_file_name
                      , cr.attach_file_url
                      , cr.process_status
                      , cr.idx_crm_meta_danger
                      , cr.idx_agenda_first
                      , cr.idx_agenda_second
                      , cr.idx_genre_meta
                      , cr.idx_type_meta
                      , cr.danger_step_title
                      , cr.main_problem
                      , cr.cons_process
                      , cr.request_modify
                 FROM crm_report cr
                          LEFT JOIN crm_client cc on cr.idx_crm_client = cc.idx
                          LEFT JOIN crm_person cp on cc.idx_crm_person = cp.idx
                 WHERE cr.idx_crm_reservation = #{param.idx}
                 order by cr.update_date desc
                     limit 1
             ) a
                 LEFT JOIN crm_meta cm ON (cm.idx = a.idx_crm_meta_danger)
    </select>

    <select id="selectReportList" parameterType="java.util.HashMap" resultMap="ReportMap">
        /* commonMapper.selectReportList 상담일지 목록 */
        SELECT b.* FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum,
        a.idx as idx_reservation,
        cr.idx as idx_report,
        a.idx_crm_client,
        a.idx_crm_staff as reservation_idx_crm_staff,
        cr.idx_crm_staff,
        IF((SELECT name FROM crm_staff ff WHERE idx = a.idx_crm_staff) IS NULL, '삭제', (SELECT name FROM crm_staff ff WHERE idx = a.idx_crm_staff)) as staff_name,
        a.idx_crm_center,
        a.name as client_name,
        cr.create_date as report_date,
        cr.cons_contents ,
        -- DATE_FORMAT(a.cons_date, '%Y-%m-%d') as cons_date,
        a.cons_date,
        IF(a.report_yn = 'Y', '등록', '미등록') as report_yn,
        a.reservation_status,
        IF(cr.permission = 'Y', '승인' , '미승인') as permission,
        cr.danger_step_title ,
        IF(cr.process_status IS NULL, '미완료', cr.process_status) as process_status,
        IF(cc.eap_YN = 'Y', 'EAP', '일반') as eap_type,
        cc.idx_crm_meta_product ,
        CONCAT (cm.type, '-', cm.product) as product_name
        , cr.cons_opinion
        , cr.mental_test
        , cr.next_plan
        , cr.main_problem
        , cr.attach_file_name
        , cr.attach_file_url
        , cr.cons_process
        , cr.create_date
        , cr.idx_agenda_first
        , cr.idx_agenda_second
        , cr.idx_genre_meta
        , cr.idx_type_meta
        , IF (a.idx_crm_center = 0, '본원센터', cen.name) as center_name
        , IF(com.idx is null, 'B2C', CONCAT('B2B/',com.name) ) as company_name
        , mr2.cons_title as title_type
        , mr3.cons_title as title_agenda_first
        , mr4.cons_title as title_agenda_second
        , cr.request_modify
        , cc.idx_crm_company
        , cr.idx_crm_meta_danger
        FROM crm_reservation a
        left join crm_center cen on a.idx_crm_center = cen.idx
        left join crm_report cr on cr.idx_crm_reservation = a.idx
        left join crm_client cc on cc.idx = a.idx_crm_client
        LEFT JOIN crm_company com ON cc.idx_crm_company = com.idx
        left join crm_meta cm on cc.idx_crm_meta_product = cm.idx
        LEFT JOIN crm_meta_report mr1 ON cr.idx_genre_meta = mr1.idx
        LEFT JOIN crm_meta_report mr2 ON cr.idx_type_meta = mr2.idx
        LEFT JOIN crm_meta_report mr3 ON cr.idx_agenda_first = mr3.idx
        LEFT JOIN crm_meta_report mr4 ON cr.idx_agenda_second = mr4.idx
        LEFT JOIN crm_staff cs on cr.idx_crm_staff = cs.idx
        , (SELECT @ROWNUM :=0) R
        WHERE
        1=1
        <if test="param != null and param.startDate neq null and param.startDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(a.cons_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(a.cons_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param != null and param.idxCrmClient neq null and param.idxCrmClient != '-1'">
            AND
            a.idx_crm_client = #{param.idxCrmClient}
        </if>
        <if test="param != null and param.idxCrmStaff neq null and param.idxCrmStaff != '-1'">
            AND
            a.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param != null and param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            a.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test ="param !=null and param.idxCrmMetaDanger neq null and param.idxCrmMetaDanger == '99'">
            AND
            cr.idx_crm_meta_danger is null
        </if>
        <if test ="param !=null and param.idxCrmMetaDanger neq null and param.idxCrmMetaDanger != '-1' and param.idxCrmMetaDanger != '99'">
            AND
            cr.idx_crm_meta_danger = #{param.idxCrmMetaDanger}
        </if>
        <if test="param != null and param.idxCrmCompany neq null and param.idxCrmCompany > 0 ">
            AND
            cc.idx_crm_company = #{param.idxCrmCompany}
        </if>
        <if test="param != null and param.idxCrmCompany neq null and param.idxCrmCompany == '-1'">
            AND
            cc.idx_crm_company is not null
        </if>
        <if test="param != null and param.permission neq null and param.permission !=''">
            AND
            cr.permission = #{param.permission}
        </if>
        <if test="param != null and param.value neq null and param.value != ''">
            AND
            (
            a.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cs.name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param != null and param.idxCrmMetaProduct neq null and param.idxCrmMetaProduct != '-1'">
            AND
            cc.idx_crm_meta_product = #{param.idxCrmMetaProduct}
        </if>
        <if test="param != null and param.reportYn neq null and param.reportYn !=''">
            AND
            a.report_yn = #{param.reportYn}
        </if>

        ORDER BY a.cons_date asc
        ) b
        WHERE
        2=2

        ORDER BY ROWNUM DESC
        <if test="param != null and param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>


    <select id="selectReportListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectReportListCount 상담일지 목록 수*/
        SELECT COUNT(*) FROM (
        SELECT
        a.idx as idx_reservation,
        cr.idx as idx_report,
        a.idx_crm_client,
        a.idx_crm_staff as reservation_idx_crm_staff,
        cr.idx_crm_staff,
        IF((SELECT name FROM crm_staff ff WHERE idx = a.idx_crm_staff) IS NULL, '삭제', (SELECT name FROM crm_staff ff WHERE idx = a.idx_crm_staff)) as staff_name,
        a.idx_crm_center,
        a.name as client_name,
        cr.create_date as report_date,
        cr.cons_contents ,
        -- DATE_FORMAT(a.cons_date, '%Y-%m-%d') as cons_date,
        a.cons_date,
        IF(a.report_yn = 'Y', '등록', '미등록') as report_yn,
        a.reservation_status,
        IF(cr.permission = 'Y', '승인' , '미승인') as permission,
        cr.danger_step_title ,
        IF(cr.process_status IS NULL, '미완료', cr.process_status) as process_status,
        IF(cc.eap_YN = 'Y', 'EAP', '일반') as eap_type,
        cc.idx_crm_meta_product ,
        CONCAT (cm.type, '-', cm.product) as product_name
        , cr.cons_opinion
        , cr.mental_test
        , cr.next_plan
        , cr.main_problem
        , cr.attach_file_name
        , cr.attach_file_url
        , cr.cons_process
        , cr.create_date
        , cr.idx_agenda_first
        , cr.idx_agenda_second
        , cr.idx_genre_meta
        , cr.idx_type_meta
        , IF (a.idx_crm_center = 0, '본원센터', cen.name) as center_name
        , IF(com.idx is null, 'B2C', CONCAT('B2B/',com.name) ) as company_name
        , mr2.cons_title as title_type
        , mr3.cons_title as title_agenda_first
        , mr4.cons_title as title_agenda_second
        , cr.request_modify
        , cc.idx_crm_company
        , cr.idx_crm_meta_danger
        FROM crm_reservation a
        left join crm_center cen on a.idx_crm_center = cen.idx
        left join crm_report cr on cr.idx_crm_reservation = a.idx
        left join crm_client cc on cc.idx = a.idx_crm_client
        LEFT JOIN crm_company com ON cc.idx_crm_company = com.idx
        left join crm_meta cm on cc.idx_crm_meta_product = cm.idx
        LEFT JOIN crm_meta_report mr1 ON cr.idx_genre_meta = mr1.idx
        LEFT JOIN crm_meta_report mr2 ON cr.idx_type_meta = mr2.idx
        LEFT JOIN crm_meta_report mr3 ON cr.idx_agenda_first = mr3.idx
        LEFT JOIN crm_meta_report mr4 ON cr.idx_agenda_second = mr4.idx
        LEFT JOIN crm_staff cs on cr.idx_crm_staff = cs.idx
        WHERE
        1=1
        <if test="param != null and param.startDate neq null and param.startDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(a.cons_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(a.cons_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param != null and param.idxCrmClient neq null and param.idxCrmClient != '-1'">
            AND
            a.idx_crm_client = #{param.idxCrmClient}
        </if>
        <if test="param != null and param.idxCrmStaff neq null and param.idxCrmStaff != '-1'">
            AND
            a.idx_crm_staff = #{param.idxCrmStaff}
        </if>
        <if test="param != null and param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            a.idx_crm_center = #{param.idxCrmCenter}
        </if>
        <if test ="param !=null and param.idxCrmMetaDanger neq null and param.idxCrmMetaDanger == '99'">
            AND
            cr.idx_crm_meta_danger is null
        </if>
        <if test ="param !=null and param.idxCrmMetaDanger neq null and param.idxCrmMetaDanger != '-1' and param.idxCrmMetaDanger != '99'">
            AND
            cr.idx_crm_meta_danger = #{param.idxCrmMetaDanger}
        </if>
        <if test="param != null and param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND
            cc.idx_crm_company = #{param.idxCrmCompany}
        </if>
        <if test="param != null and param.idxCrmCompany neq null and param.idxCrmCompany == '-1'">
            AND
            cc.idx_crm_company IS NOT NULL
        </if>
        <if test="param != null and param.permission neq null and param.permission !=''">
            AND
            cr.permission = #{param.permission}
        </if>
        <if test="param != null and param.value neq null and param.value != ''">
            AND
            (
            a.name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            cs.name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        <if test="param != null and param.idxCrmMetaProduct neq null and param.idxCrmMetaProduct != '-1'">
            AND
            cc.idx_crm_meta_product = #{param.idxCrmMetaProduct}
        </if>
        <if test="param != null and param.reportYn neq null and param.reportYn !=''">
            AND
            a.report_yn = #{param.reportYn}
        </if>
        ) b, (SELECT @ROWNUM :=0) R
        WHERE
        1=1
    </select>

    <select id="selectEapList" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectEapList EAP배정현황 목록 */
        SELECT
        *
        FROM
        view_eap_list
        WHERE 1=1
        <if test="param.status neq null and param.status != ''">
            AND
            eap_status = #{param.status}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            company_name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            client_code LIKE CONCAT ('%', #{param.value}, '%')
            OR
            name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
        ORDER BY create_date DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectEapListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectEapListCount EAP배정현황 목록 수 */
        SELECT
        COUNT(*)
        FROM
        view_eap_list
        WHERE 1=1
        <if test="param.status neq null and param.status != ''">
            AND
            eap_status = #{param.status}
        </if>
        <if test="param.value neq null and param.value != ''">
            AND
            (
            company_name LIKE CONCAT ('%', #{param.value}, '%')
            OR
            client_code LIKE CONCAT ('%', #{param.value}, '%')
            OR
            name LIKE CONCAT ('%', #{param.value}, '%')
            )
        </if>
    </select>

    <select id="selectCenterEapList" parameterType="java.util.HashMap" resultMap="ClientMap">
        /* commonMapper.selectCenterEapList 각 센터별 신규상담신청 목록 */
        SELECT
        a.*
        FROM
        (

        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , client.idx
        , client.name
        , client.eap_hope_date
        , (SELECT name FROM crm_company WHERE idx = idx_crm_company) as company_name
        , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_type ) as type_name
        , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_subject ) as subject_name
        , CASE WHEN status IS NULL THEN '상담진행신청'
        WHEN status = '센터접수' THEN '대기'
        ELSE status END as status
        , client.create_date
        , client.eap_hope_area
        , client.eap_hope_area2
        , center.address
        FROM
        crm_client client
        LEFT JOIN crm_eap eap ON eap.idx_crm_center = #{param.idxCrmCenter} AND eap.idx_crm_client = client.idx
        LEFT JOIN crm_center center ON center.idx = #{param.idxCrmCenter}
        , (SELECT @ROWNUM:=0) AS R
        WHERE
        eap_YN = 'Y'
        AND
        address REGEXP (CONCAT(client.eap_hope_area, '+')) AND address REGEXP(CONCAT(client.eap_hope_area2, '+'))
        ORDER BY client.create_date ASC
        ) a ORDER BY a.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT
            #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectCenterEapListCount" parameterType="java.util.HashMap" resultType="int">
        /* commonMapper.selectCenterEapListCount 각 센터별 신규상담신청 목록  수*/
        SELECT COUNT(*)
        FROM (
                 SELECT client.idx
                      , client.name
                      , client.eap_hope_date
                      , (SELECT name FROM crm_company WHERE idx = idx_crm_company)   as company_name
                      , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_type)    as type_name
                      , (SELECT type FROM crm_meta WHERE idx = idx_crm_meta_subject) as subject_name
                      , CASE
                            WHEN status IS NULL THEN '상담진행신청'
                            WHEN status = '센터접수' THEN '대기'
                            ELSE status END                                          as status
                      , client.create_date
                      , client.eap_hope_area
                      , client.eap_hope_area2
                      , center.address
                 FROM crm_client client
                          LEFT JOIN crm_eap eap
                                    ON eap.idx_crm_center = #{param.idxCrmCenter} AND eap.idx_crm_client = client.idx
                          LEFT JOIN crm_center center ON center.idx = #{param.idxCrmCenter}
                 WHERE eap_YN = 'Y'
                   AND address REGEXP (CONCAT(client.eap_hope_area, '+')) AND address REGEXP(CONCAT(client.eap_hope_area2, '+'))
             ) a
    </select>

    <select id="selectCenterStatusClientNum" parameterType="java.util.Map" resultMap="ClientMap">
        /* commonMapper.selectCenterStatusClientNum 센터현황 고객 현황 */
        SELECT
        count(*) as a_cnt
        , SUM(CASE WHEN client_status = '진행' or eap_process_status ='의뢰' THEN 1 ELSE 0 END) as p_cnt
        , SUM(CASE WHEN client_status = '종결' or eap_process_status ='종료' THEN 1 ELSE 0 END) as e_cnt
        , SUM(CASE WHEN client_status = '홀딩' THEN 1 ELSE 0 END) as h_cnt
        , SUM(CASE WHEN create_date >= DATE_SUB(NOW(), INTERVAL 1 MONTH) THEN 1 ELSE 0 END ) as n_cnt
        FROM
        crm_client
        WHERE
        1=1
        <if test="param.startDate neq null and param.startDate != ''">
            AND
            <![CDATA[
				DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            idx_crm_center = #{param.idxCrmCenter}
        </if>
    </select>

    <select id="selectCenterStatusStaffConsNum" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* commonMapper.selectCenterStatusStaffConsNum 각 상담사 별 상담 건수*/
        SELECT a.*
        <!-- , COUNT(meta.type) as total -->
        , SUM(CASE WHEN meta.type in ('소견서','일반상담','도박상담','범피상담','EAP상담', '검사', '기타') or a.eap_YN = 'Y' THEN 1 ELSE 0 END) as total
        , SUM(CASE WHEN meta.type = '일반상담' THEN 1 ELSE 0 END) as normal
        , SUM(CASE WHEN meta.type = '도박상담' THEN 1 ELSE 0 END) as gamble
        , SUM(CASE WHEN meta.type = '범피상담' THEN 1 ELSE 0 END) as crime
        , SUM(CASE WHEN meta.type = 'EAP상담' THEN 1 ELSE 0 END) as eap
        , SUM(CASE WHEN meta.type = '검사' THEN 1 ELSE 0 END) as test
        , SUM(CASE WHEN meta.type = '소견서' THEN 1 ELSE 0 END) as opinion
        , SUM(CASE WHEN meta.type = '기타' THEN 1 ELSE 0 END) as etc
        , SUM(CASE WHEN a.eap_YN = 'Y' THEN 1 ELSE 0 END) as real_eap
        FROM (
        SELECT
        idx
        , idx_crm_client
        , idx_crm_staff
        , (select idx_crm_meta_product from crm_client where idx = idx_crm_client) as idx_crm_meta_product
        , (select name from crm_staff where idx = idx_crm_staff) as staff_name
        , (select eap_YN from crm_client where idx = idx_crm_client) as eap_YN
        , create_date
        , idx_crm_center
        FROM
        crm_reservation
        WHERE
        reservation_status = '입실'
        <if test="param.startDate neq null and param.startDate != ''">
            AND
            <![CDATA[
				DATE_FORMAT(create_date, '%Y-%m-%d') >= DATE_FORMAT(#{param.startDate}, '%Y-%m-%d')
			AND
				DATE_FORMAT(create_date, '%Y-%m-%d') <= DATE_FORMAT(#{param.endDate}, '%Y-%m-%d')
			]]>
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND
            idx_crm_center = #{param.idxCrmCenter}
        </if>
        ) a
        LEFT JOIN crm_meta meta ON meta.idx = a.idx_crm_meta_product
        GROUP BY idx_crm_staff
        ORDER BY staff_name ASC
    </select>

    <select id="selectAll" resultType="Map">
        /* CommonMapper.selectAll : 전체 정보 조회 */
        ${sql}
    </select>

    <select id="selectOne" resultType="Map">
        /* CommonMapper.selectOne : 선택 정보 조회 */
        ${sql}
    </select>

    <select id="selectInt" resultType="int">
        /* CommonMapper.selectInt : 선택 정보 갯수 */
        ${sql}
    </select>

    <delete id="delete">
        /* CommonMapper.delete : 정보 삭제 */
        DELETE FROM ${table} WHERE
        <foreach item="value" index="key" collection="param" separator=" and ">
            ${key} = #{value}
        </foreach>
    </delete>

    <delete id="insert">
        /* CommonMapper.insert : 정보 추가 */
        INSERT INTO ${table} set
        <foreach item="value" index="key" collection="data" separator=",">
            ${key} = #{value}
        </foreach>
    </delete>

    <update id="update">
        /* CommonMapper.update : 정보 수정 */
        UPDATE ${table} SET
        <foreach item="value" index="key" collection="data" separator=",">
            <choose>
                <when test="key == 'permission_date'">
                    ${key} = ${value}
                </when>
                <otherwise>
                    ${key} = #{value}
                </otherwise>
            </choose>
        </foreach>
        WHERE ${where}
    </update>

    <update id="updateQuery">
        /* CommonMapper.update : 정보 수정 */
        ${sql}
    </update>

    <select id="selectMainStatusStaff" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusStaff 본원 상담사별 통계 */

        SELECT
        	cs.idx,
			cs.name as staff_name ,
            ifnull(count(distinct cc.idx_crm_person), 0) AS client_cnt -- 내담자수
		,	ifnull(sum(cc.reservation_cnt), 0) as reservation_cnt -- 예약수
		, 	IFNULL( sum(cc.sum_report),0) AS report_cnt -- 상담진행수
		, 	case when cc.reservation_cnt >0 then round(ifnull(sum(cc.cancel_cnt),0)*100/sum(cc.reservation_cnt),2) else 0 end as cancel_rate -- 취소율
		, 	IFNULL( ROUND(AVG(cc.sum_report),2),	0) AS avg_report_cnt 	-- 평균회기수
		, 	ROUND(
			case when count(distinct cc.idx_crm_person) > 0 then sum(cc.sum_report)*4 / (count(distinct cc.idx_crm_person)*4)
			ELSE 0 END, 2) AS turnover_rate -- 회전율, 4.0점을 만점으로 수정
		, 	IFNULL( sum(cc.sum_price),	0) AS tot_price	-- 매출액
			FROM crm_staff cs
			-- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
			LEFT JOIN (
			SELECT
                c.idx_crm_person,
				count(*) AS reservation_cnt,
				sum(case when cr2.reservation_status in ('당일취소','NS')  then 1 ELSE 0 END) AS cancel_cnt,
				sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
				sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
				c.idx_crm_staff
				, c.idx_crm_company
			FROM crm_reservation cr2
			JOIN crm_client c ON cr2.idx_crm_client  = c.idx
			LEFT JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
			WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
			AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
		<if test="param.clientType neq null and param.clientType != '-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
			GROUP BY
				c.idx_crm_person, c.idx_crm_staff ) cc ON	cs.idx = cc.idx_crm_staff
        WHERE cs.idx_crm_center  = 0 and cs.authority = 'STAFF' and cs.permission = 'Y'
        <if test="param.name neq null and param.name != ''">
            AND cs.name LIKE CONCAT ('%', #{param.name}, '%') -- 상담사명 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND cs.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY cs.idx
        order by cs.name
    </select>

    <select id="selectClientAgeCnt" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectClientAgeCnt 본원 통계별 내담자 수 */
        SELECT
        COUNT(*)
        FROM
        <![CDATA[
    	(select case when date_format(now(),'%Y')-substring(c.birth,1,4) <= 19 then 47
			when date_format(now(),'%Y')-substring(c.birth,1,4) BETWEEN 20 AND 29 then 48
			when date_format(now(),'%Y')-substring(c.birth,1,4) BETWEEN 30 AND 39 then 49
			when date_format(now(),'%Y')-substring(c.birth,1,4) BETWEEN 40 AND 49 then 50
			when date_format(now(),'%Y')-SUBSTRING(c.birth,1,4) BETWEEN 50 AND 59 then 51
			ELSE 52 END AS age_grade, c.client_status , c.idx, c.idx_crm_company, c.idx_crm_center from crm_client c ) a
		]]>
        WHERE
        a.client_status = '진행'
        AND a.age_grade = #{param.gubun}
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND a.idx_crm_company = #{param.idxCrmCompany} -- 회사검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND a.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>

    </select>

    <select id="selectMainStatusProduct" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusProduct 본원 상품별 통계 */
        SELECT
        IF( (cs.type IS NULL OR cs.type = ''), '미설정', cs.type) AS type
        , cs.idx
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        c.idx_crm_meta_product
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        LEFT JOIN crm_meta m ON
        c.idx_crm_meta_product = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY c.idx_crm_meta_product
        ) cc
        -- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
        LEFT JOIN crm_meta cs ON cs.idx = cc.idx_crm_meta_product AND cs.category = '상담구분'
        GROUP BY cs.type
        ORDER BY cs.idx
    </select>

    <select id="selectMainStatusType" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusType 본원 유형별 통계 */
        SELECT
        IF( (cs.type IS NULL OR cs.type = ''), '미설정', cs.type) AS type
        , cs.idx
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        c.idx_crm_meta_type
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        LEFT JOIN crm_meta m ON c.idx_crm_meta_type = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY c.idx_crm_meta_type
        ) cc
        -- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
        LEFT JOIN crm_meta cs ON cs.idx = cc.idx_crm_meta_type AND cs.category = '상담유형'
        -- 회전율 계산turnover
        -- 예약수 계산
        GROUP BY cs.type
        ORDER BY cs.idx
    </select>

    <select id="selectMainStatusSubject" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusSubject 본원 주제별 통계 */
        SELECT
        IF( (cs.type IS NULL OR cs.type = ''), '미설정', cs.type) AS type
        , cs.idx
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        c.idx_crm_meta_subject
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        LEFT JOIN crm_meta m ON
        c.idx_crm_meta_subject = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY c.idx_crm_meta_subject
        ) cc
        -- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
        LEFT JOIN crm_meta cs ON cs.idx = cc.idx_crm_meta_subject and cs.category = '상담주제'
        -- 회전율 계산turnover
        -- 예약수 계산
        GROUP BY cs.type
        ORDER BY cs.idx
    </select>

    <select id="selectMainStatusGender" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusGender 본원 남녀성비별 통계 */
        SELECT
        cc.gender as type
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실')  then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        IF( (c.gender IS NULL OR c.gender = ''), '미설정', c.gender) AS gender
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        JOIN crm_person p ON c.idx_crm_person = p.idx
        LEFT JOIN crm_meta m ON c.idx_crm_meta_route = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
        AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND cc.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY c.gender
        ) cc
        -- 회전율 계산turnover
        -- 예약수 계산
        WHERE
        1=1
        GROUP BY cc.gender
        ORDER BY cc.gender
    </select>

    <select id="selectMainStatusAge" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusAge 본원 유형별 통계 */
        SELECT
        IF( (cs.type IS NULL OR cs.type = ''), '미설정', cs.type) AS type
        , cs.idx
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM crm_meta cs
        -- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
        LEFT JOIN (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        case when p.age_range = '10대 이하' then 47
        when p.age_range = '20대' then 48
        when p.age_range = '30대' then 49
        when p.age_range = '40대' then 50
        when p.age_range = '50대' then 51
        ELSE 52 END AS idx_crm_meta_age
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        JOIN crm_person p ON c.idx_crm_person = p.idx
        LEFT JOIN crm_meta m ON c.idx_crm_meta_route = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY p.age_range
        ) cc ON		cs.idx = cc.idx_crm_meta_age
        -- 회전율 계산turnover
        -- 예약수 계산
        WHERE
        cs.category = '연령별'
        GROUP BY cs.type
        ORDER BY cs.idx
    </select>


    <select id="selectMainStatusRoute" parameterType="java.util.HashMap" resultMap="StatusMap">
        /* CommonMapper.selectMainStatusRoute 본원 유입경로별 통계 */
        SELECT
        IF( (cs.type IS NULL OR cs.type = ''), '미설정', cs.type) AS type
        , cs.idx
        , IFNULL(sum(cc.sum_person),0) AS client_cnt-- 내담자수
        , IFNULL(sum(cc.reservation_cnt),0) AS reservation_cnt-- 예약수
        , IFNULL( sum(cc.sum_report), 0) AS report_cnt -- 상담진행수
        , case when cc.reservation_cnt >0 then ifnull(cc.cancel_cnt,0)*100/cc.reservation_cnt else 0 end as cancel_rate
        , IFNULL( ROUND(AVG(cc.sum_report/sum_client), 2), 0) AS avg_report_cnt -- 평균회기
        , IFNULL( sum(cc.sum_price), 0) AS tot_price -- 매출액
        , ROUND(case when sum(cc.sum_person) > 0 then sum(cc.sum_report)*100 / (sum(cc.sum_person)*4) ELSE 0 END, 2) AS turnover_rate -- 회전율
        FROM (
        SELECT
        count(distinct c.idx_crm_person ) AS sum_person,
        count(distinct c.idx ) AS sum_client,
        sum(case when cr2.reservation_status in ('NS','입실') then 1 ELSE 0 END) AS sum_report,
        sum(case when cr2.reservation_status in ('NS','입실') AND c.idx_crm_meta_product = 19 then c.etc_price when cr2.reservation_status in ('NS','입실') then m.price ELSE 0 END) AS sum_price,
        sum(case when cr2.reservation_status in ('당일취소','NS') then 1 ELSE 0 END) as cancel_cnt,
        count(*) as reservation_cnt,
        c.idx_crm_meta_route
        FROM crm_reservation cr2
        JOIN crm_client c on cr2.idx_crm_client  = c.idx
        LEFT JOIN crm_meta m ON c.idx_crm_meta_route = m.idx
        WHERE 1=1
        <if test="param.startDate neq null and param.startDate != '' and param.endDate neq null and param.endDate != ''">
            AND DATE_FORMAT(cr2.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany !='-1'">
            AND c.idx_crm_company = #{param.idxCrmCompany} -- B2B 회사검색
        </if>
        <if test="param.clientType neq null and param.clientType !='-1'">
            AND c.client_type = #{param.clientType} -- B2C 검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        GROUP BY c.idx_crm_meta_route
        ) cc
        -- 내담자수(c.idx), 고객별 상담진행수(sum_report), 매출액(sum_price)
        LEFT JOIN crm_meta cs ON cs.idx = cc.idx_crm_meta_route AND cs.category = '유입경로'
        -- 회전율 계산turnover
        -- 예약수 계산
        GROUP BY cs.type
        ORDER BY cs.idx
    </select>

    <select id="selectPurchaseHistoryB2CStatus" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseHistoryB2CStatus 본원 B2C 매출내역 */
        SELECT
        SUM(case when p.`status` = '수납' AND p.pur_pay_way = '현금' then p.pur_price ELSE 0 END) AS pur_cash,
        SUM(case when p.`status` = '수납' AND p.pur_pay_way = '카드' then p.pur_price ELSE 0 END) AS pur_card,
        SUM(case when p.`status` = '수납' AND p.pur_pay_way = '계좌이체' then p.pur_price ELSE 0 END) AS pur_tex_bill,
        SUM(case when p.`status` = '환불' then p.pur_price ELSE 0 END) AS pur_refund,
        SUM(case when p.`status` = '수납' AND p.pur_pay_way = '상품권' then p.pur_price ELSE 0 END) AS pur_giftcard,
        SUM(case when p.`status` = '미수금' then p.pur_price ELSE 0 END) AS pur_receivable,
        SUM(case when p.`status` = '수납' AND p.pur_pay_way IN ('현금','카드','계좌이체','상품권') then p.pur_price ELSE 0 END) AS
        pur_total
        FROM crm_purchase p
        LEFT JOIN crm_client c ON p.idx_crm_client = c.idx AND c.client_type = 'B2C'
        LEFT JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        LEFT JOIN crm_staff s ON c.idx_crm_staff = s.idx AND s.authority = 'STAFF'
        left JOIN crm_center ct ON c.idx_crm_center = ct.idx
        LEFT JOIN crm_meta m2 ON c.idx_crm_meta_type = m2.idx -- 상담유형
        WHERE
        p.client_type = 'B2C'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.clientName neq null and param.clientName !=''">
            AND c.`name` LIKE CONCAT ('%', #{param.clientName}, '%') -- 내담자명
        </if>
        <if test="param.staffName neq null and param.staffName != ''">
            AND s.`name` LIKE CONCAT ('%', #{param.staffName}, '%') -- 상담자명
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
        <if test="param.gubun neq null and param.gubun != ''">
            AND m.`type` = #{param.gubun} -- 상담구분
        </if>
        <if test="param.typeName neq null and param.typeName !=''">
            AND m2.`type` = #{param.typeName} -- 상담유형
        </if>
    </select>

    <select id="selectPurchaseHistoryB2CList" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseHistoryB2CList 본원 B2C 매출목록 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum,
        p.pur_date
        , IF(c.idx_crm_center = 0, '본원센터', ct.`name`) AS center_name
        , m.`type` AS gubun
        , c.`name` AS client_name
        , s.`name` AS staff_name
        , p.pur_pay_way
        , p.pur_price
        , p.`status`
        , p.memo
        FROM crm_purchase p
        LEFT JOIN crm_client c ON p.idx_crm_client = c.idx AND c.client_type = 'B2C'
        LEFT JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        LEFT JOIN crm_staff s ON c.idx_crm_staff = s.idx AND s.authority = 'STAFF'
        LEFT JOIN crm_center ct ON c.idx_crm_center = ct.idx
        LEFT JOIN crm_meta m2 ON c.idx_crm_meta_type = m2.idx -- 상담유형
        JOIN (SELECT @ROWNUM :=0) R
        WHERE
        p.client_type = 'B2C'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.clientName neq null and param.clientName !=''">
            AND c.`name` LIKE CONCAT ('%', #{param.clientName}, '%') -- 내담자명
        </if>
        <if test="param.staffName neq null and param.staffName != ''">
            AND s.`name` LIKE CONCAT ('%', #{param.staffName}, '%') -- 상담자명
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
        <if test="param.gubun neq null and param.gubun != ''">
            AND m.`type` = #{param.gubun} -- 상담구분
        </if>
        <if test="param.typeName neq null and param.typeName !=''">
            AND m2.`type` = #{param.typeName} -- 상담유형
        </if>
        ORDER BY p.pur_date asc
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseHistoryB2CListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseHistoryB2CListCount 본원 B2C 매출목록 수 */
        SELECT
        COUNT(*)
        FROM crm_purchase p
        LEFT JOIN crm_client c ON p.idx_crm_client = c.idx AND c.client_type = 'B2C'
        LEFT JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        LEFT JOIN crm_staff s ON c.idx_crm_staff = s.idx AND s.authority = 'STAFF'
        LEFT JOIN crm_center ct ON c.idx_crm_center = ct.idx
        LEFT JOIN crm_meta m2 ON c.idx_crm_meta_type = m2.idx -- 상담유형
        WHERE
        p.client_type = 'B2C'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.clientName neq null and param.clientName !=''">
            AND c.`name` LIKE CONCAT ('%', #{param.clientName}, '%') -- 내담자명
        </if>
        <if test="param.staffName neq null and param.staffName != ''">
            AND s.`name` LIKE CONCAT ('%', #{param.staffName}, '%') -- 상담자명
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter !='-1'">
            AND c.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
        <if test="param.gubun neq null and param.gubun != ''">
            AND m.`type` = #{param.gubun} -- 상담구분
        </if>
        <if test="param.typeName neq null and param.typeName !=''">
            AND m2.`type` = #{param.typeName} -- 상담유형
        </if>
    </select>

    <select id="selectPurchaseHistoryB2BStatus" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseHistoryB2BStatus 본원 B2B 매출통계 */
        SELECT
        sum(case when p.`status` = '수납' then p.pur_price ELSE 0 END) AS pur_cash,
        sum(case when p.`status` = '환불' then p.pur_price ELSE 0 END) AS pur_refund,
        sum(case when p.`status` = '미수금' then p.pur_price ELSE 0 END) AS pur_receivable
        FROM crm_purchase p
        LEFT JOIN crm_company com ON p.idx_crm_company = com.idx
        WHERE
        p.client_type = 'B2B'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND com.idx = #{param.idxCrmCompany} -- 기업검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
    </select>

    <select id="selectPurchaseHistoryB2BList" parameterType="java.util.HashMap" resultMap="PurchaseMap">
        /* CommonMapper.selectPurchaseHistoryB2BList 본원 B2B 매출목록 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum,
        p.pur_date,
        com.name as company_name,
        p.pur_pay_way
        , p.pur_price
        , p.`status`
        FROM crm_purchase p
        LEFT JOIN crm_company com ON p.idx_crm_company = com.idx
        JOIN (SELECT @ROWNUM :=0) R
        WHERE
        p.client_type = 'B2B'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND com.idx = #{param.idxCrmCompany} -- 기업검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
        ORDER BY p.pur_date asc
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPurchaseHistoryB2BListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPurchaseHistoryB2BListCount 본원 B2B 매출목록 수 */
        SELECT
        COUNT(*)
        FROM crm_purchase p
        LEFT JOIN crm_company com ON p.idx_crm_company = com.idx
        WHERE
        p.client_type = 'B2B'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(p.pur_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCompany neq null and param.idxCrmCompany != '-1'">
            AND com.idx = #{param.idxCrmCompany} -- 기업검색
        </if>
        <if test="param.purPayWay neq null and param.purPayWay != ''">
            AND p.pur_pay_way = #{param.purPayWay} -- 결재구분
        </if>
    </select>

    <select id="selectPayStaffList" parameterType="java.util.HashMap" resultMap="PayMap">
        /* CommonMapper.selectPayStaffList 본원 상담사 급여 내역 */

        SELECT @ROWNUM := @ROWNUM + 1 AS rownum,
               b.*
        FROM (
                 SELECT a.idx
                      , IFNULL(a.idx_crm_center, '0')      AS idx_crm_center
                      , IFNULL(a.center_name, '본원센터')      AS center_name
                      , a.staff_name                                           -- 상담사명
                      , SUM(a.report_cnt)                  AS report_cnt       -- 상담회기
                      , SUM(a.price)                       AS price            -- 매출액
                      , SUM(a.etc_price)                   AS etc_price        -- 매출액
                      , SUM(a.staff_pay)                   AS staff_pay        -- 총 급여액
                      , round(SUM(a.staff_pay) * 0.03, 0)  AS income_tax       -- 소득세
                      , round(SUM(a.staff_pay) * 0.003, 0) AS local_income_tax -- 지방소득세
                      , ROUND(SUM(a.staff_pay) - round(SUM(a.staff_pay) * 0.03, 0) - round(SUM(a.staff_pay) * 0.003, 0),
                              0)                           AS
                                                              real_staff_pay   -- 실 지급액
                 FROM (
                          SELECT m.price
                               , c.etc_price
                               , case
                                     when c.client_type = 'B2C' and re.reservation_status IN ('당일변경', '당일취소') then
                                         round(IF(c.idx_crm_meta_product = 19, c.etc_price, m.price) *
                                               ifnull(IF(c.idx_crm_meta_product in (16, 17, 18),
                                                         0.5, s.pay), 0) / 400, 0)
                                     when c.client_type = 'B2C' and re.reservation_status = 'NS' then round(
                                                     IF(c.idx_crm_meta_product = 19,
                                                        c.etc_price, m.price) *
                                                     ifnull(IF(c.idx_crm_meta_product in (16, 17, 18), 0.5, s.pay), 0) /
                                                     200, 0)
                                     when c.client_type = 'B2B' and re.reservation_status IN ('당일변경', '당일취소', 'NS') and
                                          s.idx_crm_center = 0 then
                                         round(IF(c.idx_crm_meta_product = 19, c.etc_price, m.price) *
                                               ifnull(IF(c.idx_crm_meta_product in (16, 17, 18),
                                                         0.5, s.pay), 0) / 200, 0)
                                     ELSE round(IF(c.idx_crm_meta_product = 19, c.etc_price, m.price) *
                                                ifnull(IF(c.idx_crm_meta_product in
                                                          (16, 17, 18), 0.5, s.pay), 0)) END AS staff_pay
                               , s.idx
                               , s.`name`                                                    AS staff_name
                               , case when re.reservation_status = 'NS' then 1 ELSE 0 END    AS report_cnt
                               , cc.name                                                     AS center_name
                               , cc.idx                                                      AS idx_crm_center
                          FROM crm_reservation re
                                   JOIN crm_client c ON re.idx_crm_client = c.idx
                                   JOIN crm_staff s ON re.idx_crm_staff = s.idx
                                   JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
                                   LEFT JOIN crm_center cc ON s.idx_crm_center = cc.idx
                          WHERE re.reservation_status IN ('당일변경', '당일취소', 'NS')
                            <if test="param.startDate neq null and param.startDate != ''">
                                AND DATE_FORMAT(re.cons_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{param.startDate} , '%Y-%m-%d') AND
                                DATE_FORMAT(#{param.endDate} , '%Y-%m-%d')
                            </if>
                            <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
                                AND s.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
                            </if>
                            <if test="param.name neq null and param.name != ''">
                                AND s.name LIKE CONCAT ('%', #{param.name}, '%') -- 상담사명
                            </if>
                          UNION ALL
                          SELECT m.price
                               , c.etc_price
                               , round(IF(c.idx_crm_meta_product = 19, c.etc_price, m.price) * ifnull(s.pay, 0) / 100,
                                       0) AS staff_pay
                               , s.idx
                               , s.`name` AS staff_name
                               , 1        AS report_cnt
                               , cc.name  AS center_name
                               , cc.idx   AS idx_crm_center
                          FROM crm_report r
                                   JOIN crm_client c ON r.idx_crm_client = c.idx
                                   JOIN crm_staff s ON r.idx_crm_staff = s.idx
                                   JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
                                   LEFT JOIN crm_center cc ON s.idx_crm_center = cc.idx
                          WHERE r.process_status = '완료'
                            <if test="param.startDate neq null and param.startDate != ''">
                                AND DATE_FORMAT(r.permission_date , '%Y-%m-%d') BETWEEN DATE_FORMAT(#{param.startDate} , '%Y-%m-%d') AND
                                DATE_FORMAT(#{param.endDate} , '%Y-%m-%d') -- 기간검색
                            </if>
                            <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
                                AND s.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
                            </if>
                            <if test="param.name neq null and param.name != ''">
                                AND s.name LIKE CONCAT ('%', #{param.name}, '%') -- 상담사명
                            </if>
                      ) AS a
                 GROUP BY a.idx, a.staff_name
             ) b,(SELECT @ROWNUM := 0) R
        <if test="param.startPage != '-1'">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPayStaffListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPayStaffListCount 본원 상담사 급여 내역 */
        SELECT
        COUNT(*)
        FROM
        (
        SELECT
        a.idx
        FROM
        (
        SELECT m.price
        <!-- , case when c.client_type = 'B2B' then round(m.price * ifnull(s.pay,0)/100,0) ELSE round(m.price * ifnull(s.pay,0)/200,0) END AS staff_pay -->
        , c.etc_price
        , case when c.client_type ='B2C' and re.reservation_status IN ('당일변경', '당일취소') then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 ) /400,0)
        when c.client_type ='B2C' and re.reservation_status = 'NS' then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        when c.client_type ='B2B' and re.reservation_status IN ('당일변경', '당일취소', 'NS') and s.idx_crm_center = 0 then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        ELSE round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0) ) END AS staff_pay
        , s.idx
        , s.`name` AS staff_name
        , case when re.reservation_status = 'NS' then 1 ELSE 0 END AS report_cnt
        FROM crm_reservation re
        JOIN crm_client c ON re.idx_crm_client = c.idx
        JOIN crm_staff s ON re.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE re.reservation_status IN ('당일변경','당일취소','NS')
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(re.cons_date, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{param.startDate} , '%Y-%m-%d') AND
            DATE_FORMAT(#{param.endDate} , '%Y-%m-%d')
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND s.idx_crm_center = #{param.idxCrmCenter} -- 센터검색
        </if>
        <if test="param.name neq null and param.name != ''">
            AND s.name LIKE CONCAT ('%', #{param.name}, '%') -- 상담사명
        </if>
        UNION ALL
        SELECT m.price
        , c.etc_price
        , round(m.price * ifnull(s.pay,0)/100,0) AS staff_pay
        , s.idx
        , s.`name` AS staff_name
        , 1 AS report_cnt
        FROM crm_report r
        JOIN crm_client c ON r.idx_crm_client = c.idx
        JOIN crm_staff s ON r.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE r.process_status = '완료'
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(r.permission_date , '%Y-%m-%d') BETWEEN DATE_FORMAT(#{param.startDate} , '%Y-%m-%d') AND
            DATE_FORMAT(#{param.endDate} , '%Y-%m-%d') -- 기간검색
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter != '-1'">
            AND s.idx_crm_center = #{param.idxCrmCenter}  -- 센터검색
        </if>
        <if test="param.name neq null and param.name != ''">
            AND s.name LIKE CONCAT ('%', #{param.name}, '%') -- 상담사명
        </if>
        ) AS a
        GROUP BY a.idx, a.staff_name
        ) b
    </select>

    <select id="selectPayStaff" parameterType="java.util.HashMap" resultMap="PayMap">
        /* CommonMapper.selectPayStaff 본원 상담사 급여 상세내역 */
        SELECT a.idx
        , a.staff_name -- 상담사명
        , SUM(a.report_cnt) AS report_cnt -- 상담회기
        , SUM(a.price) AS price -- 매출액
        , SUM(a.etc_price) AS etc_price -- 매출액
        , SUM(a.staff_pay) AS staff_pay -- 총 급여액
        , round(SUM(a.staff_pay)*0.03,0) AS income_tax -- 소득세
        , round(SUM(a.staff_pay)*0.003,0) AS local_income_tax -- 지방소득세
        , ROUND( SUM(a.staff_pay) - round(SUM(a.staff_pay)*0.03,0) - round(SUM(a.staff_pay)*0.003,0),0) AS
        real_staff_pay -- 실 지급액
        , a.permission_month
        , a.center_name
        FROM
        (
        SELECT
        <!--m.price
				 , case when c.client_type = 'B2B' then round(m.price * ifnull(s.pay,0)/100,0) ELSE round(m.price * ifnull(s.pay,0)/200,0) END AS staff_pay -->
        <!-- , case when c.client_type ='B2C' and re.reservation_status  IN ('당일변경', '당일취소') then round(m.price * ifnull(s.pay,0)/200,0) ELSE round(m.price * ifnull(s.pay,0)/100,0) END AS staff_pay -->
        m.price
        , c.etc_price
        , case when c.client_type ='B2C' and re.reservation_status IN ('당일변경', '당일취소') then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 ) /400,0)
        when c.client_type ='B2C' and re.reservation_status = 'NS' then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        when c.client_type ='B2B' and re.reservation_status IN ('당일변경', '당일취소', 'NS') and s.idx_crm_center = 0 then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        ELSE round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0) ) END AS staff_pay
        , s.idx
        , s.`name` AS staff_name
        , case when re.reservation_status = 'NS' then 1 ELSE 0 END AS report_cnt
        , DATE_FORMAT(re.cons_date , '%Y-%m') AS permission_month
        , IF(s.idx_crm_center = 0, '본원센터', (select name from crm_center where idx = s.idx_crm_center )) as center_name
        FROM crm_reservation re
        JOIN crm_client c ON re.idx_crm_client = c.idx
        JOIN crm_staff s ON re.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE re.reservation_status IN ('당일변경','당일취소','NS')
        <if test="param.date neq null and param.date != ''">
            AND DATE_FORMAT(re.cons_date, '%Y') = #{param.date}
        </if>
        AND s.idx = #{param.idx} -- 강사 검색
        UNION ALL
        SELECT
        m.price
        , c.etc_price
        , round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull(s.pay,0)/100,0) AS staff_pay
        <!-- , round(m.price * ifnull(s.pay,0)/100,0) AS staff_pay -->
        , s.idx
        , s.`name` AS staff_name
        , 1 AS report_cnt
        , DATE_FORMAT(r.permission_date , '%Y-%m') AS permission_month
        , IF(s.idx_crm_center = 0, '본원센터', (select name from crm_center where idx = s.idx_crm_center )) as center_name
        FROM crm_report r
        JOIN crm_client c ON r.idx_crm_client = c.idx
        JOIN crm_staff s ON r.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE r.process_status = '완료'
        <if test="param.date neq null and param.date != ''">
            AND DATE_FORMAT(r.permission_date , '%Y') = #{param.date}
        </if>
        AND s.idx = #{param.idx} -- 강사 검색
        ) AS a
        GROUP BY a.idx, a.staff_name, a.permission_month

    </select>

    <select id="selectPayStaffTotal" parameterType="java.util.HashMap" resultMap="PayMap">
        /* CommonMapper.selectPayStaffTotal 본원 상담사 급여 총 합 */
        SELECT a.idx
        , a.staff_name -- 상담사명
        , SUM(a.report_cnt) AS report_cnt -- 상담회기
        , SUM(a.price) AS price -- 매출액
        , SUM(a.etc_price) AS etc_price -- 매출액
        , SUM(a.staff_pay) AS staff_pay -- 총 급여액
        , round(SUM(a.staff_pay)*0.03,0) AS income_tax -- 소득세
        , round(SUM(a.staff_pay)*0.003,0) AS local_income_tax -- 지방소득세
        , ROUND( SUM(a.staff_pay) - round(SUM(a.staff_pay)*0.03,0) - round(SUM(a.staff_pay)*0.003,0),0) AS
        real_staff_pay -- 실 지급액
        FROM
        (
        SELECT
        <!--m.price
				 , case when c.client_type = 'B2B' then round(m.price * ifnull(s.pay,0)/100,0) ELSE round(m.price * ifnull(s.pay,0)/200,0) END AS staff_pay
				, case when c.client_type ='B2C' and re.reservation_status  IN ('당일변경', '당일취소') then round(m.price * ifnull(s.pay,0)/200,0) ELSE round(m.price * ifnull(s.pay,0)/100,0) END AS staff_pay -->
        m.price
        , c.etc_price
        , case when c.client_type ='B2C' and re.reservation_status IN ('당일변경', '당일취소') then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 ) /400,0)
        when c.client_type ='B2C' and re.reservation_status = 'NS' then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        when c.client_type ='B2B' and re.reservation_status IN ('당일변경', '당일취소', 'NS') and s.idx_crm_center = 0 then round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0 )/200,0)
        ELSE round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull( IF(c.idx_crm_meta_product in (16,17,18), 0.5, s.pay) ,0) ) END AS staff_pay
        , s.idx
        , s.`name` AS staff_name
        , case when re.reservation_status = 'NS' then 1 ELSE 0 END AS report_cnt
        , DATE_FORMAT(re.cons_date , '%Y-%m') AS permission_month
        FROM crm_reservation re
        JOIN crm_client c ON re.idx_crm_client = c.idx
        JOIN crm_staff s ON re.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE re.reservation_status IN ('당일변경','당일취소','NS')
        <if test="param.date neq null and param.date != ''">
            AND DATE_FORMAT(re.cons_date, '%Y') = #{param.date}
        </if>
        AND s.idx = #{param.idx} -- 강사 검색
        UNION ALL
        SELECT
        <!-- m.price
				, round(m.price * ifnull(s.pay,0)/100,0) AS staff_pay -->
        m.price
        , c.etc_price
        , round(IF(c.idx_crm_meta_product = 19, c.etc_price , m.price) * ifnull(s.pay,0)/100,0) AS staff_pay
        , s.idx
        , s.`name` AS staff_name
        , 1 AS report_cnt
        , DATE_FORMAT(r.permission_date , '%Y-%m') AS permission_month
        FROM crm_report r
        JOIN crm_client c ON r.idx_crm_client = c.idx
        JOIN crm_staff s ON r.idx_crm_staff = s.idx
        JOIN crm_meta m ON c.idx_crm_meta_product = m.idx
        WHERE r.process_status = '완료'
        <if test="param.date neq null and param.date != ''">
            AND DATE_FORMAT(r.permission_date , '%Y') = #{param.date}
        </if>
        AND s.idx = #{param.idx} -- 강사 검색
        ) AS a
        GROUP BY a.idx, a.staff_name
    </select>

    <select id="selectPayCenterList" parameterType="java.util.HashMap" resultMap="PayMap">
        /* CommonMapper.selectPayCenterList 본원 협약센터 급여 내역 */
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum, b.* FROM (
        SELECT
        ifnull(a.idx_crm_staff,0) as idx -- 상담사idx
        , a.cons_date AS cons_date -- 상담일자
        , a.staff_name AS staff_name -- 상담사명
        , a.client_name AS client_name -- 고객명
        , a.company_name AS company_name -- 기업명
        , ifnull(a.center_name,'본원센터') AS center_name-- 센터명
        , sum(a.report_cnt) AS report_cnt -- 총 상담 회기수
        , a.cons_price AS cons_price -- 상담료
        , SUM(a.cons_price) AS sum_cons_price -- 총 계(총상담료)
        , SUBSTRING_INDEX(a.price_type," ",1) AS 'price_type'
        , SUM(a.real_cons_price) AS real_sum_cons_price -- 실 입금액
        FROM
        (
        SELECT
        cen.cons_price
        , case when cen.pur_type = 'D' then ROUND(cen.cons_price - (cen.cons_price*0.033),0) when cen.pur_type = 'T'
        then ROUND(cen.cons_price*1.1,0) ELSE cen.cons_price END AS real_cons_price
        , cen.idx
        , cen.`name` AS center_name
        , 1 AS report_cnt
        , case when cen.pur_type = 'D' then '소득공제' when cen.pur_type = 'T' then '과세 세금계산서' ELSE '면세 세금계산서' END AS price_type
        , cr.cons_date
        , s.idx AS idx_crm_staff
        , s.name AS staff_name
        , c.name AS client_name
        , cc.name AS company_name
        FROM crm_reservation cr
        JOIN crm_client c ON cr.idx_crm_client = c.idx
        JOIN crm_staff s ON c.idx_crm_staff = s.idx
        LEFT JOIN crm_center cen ON c.idx_crm_center = cen.idx
        LEFT JOIN crm_company cc ON c.idx_crm_company = cc.idx
        WHERE cr.reservation_status IN ('NS', '입실')
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(cr.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter > '0'">
            AND cen.idx = #{param.idxCrmCenter} -- 센터검색
        </if>
        ) AS a
        GROUP BY a.idx_crm_staff
        ) b, (SELECT @ROWNUM :=0) R
        ORDER BY ROWNUM DESC
        <if test="param.startPage != '-1'">
            LIMIT #{param.startPage}, #{param.pageSize}
        </if>
    </select>

    <select id="selectPayCenterListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectPayCenterListCount 본원 협약센터 급여 내역 수 */
        SELECT
        COUNT(*)
        FROM (
        SELECT
        ifnull(a.idx_crm_staff,0) as idx -- 상담사idx
        , a.cons_date AS cons_date -- 상담일자
        , a.staff_name AS staff_name -- 상담사명
        , a.client_name AS client_name -- 고객명
        , a.company_name AS company_name -- 기업명
        , ifnull(a.center_name,'본원센터') AS center_name-- 센터명
        , sum(a.report_cnt) AS report_cnt -- 총 상담 회기수
        , a.cons_price AS cons_price -- 상담료
        , SUM(a.cons_price) AS sum_cons_price -- 총 계(총상담료)
        , SUBSTRING_INDEX(a.price_type," ",1) AS 'price_type'
        , SUM(a.real_cons_price) AS real_sum_cons_price -- 실 입금액
        FROM
        (
        SELECT
        cen.cons_price
        , case when cen.pur_type = 'D' then ROUND(cen.cons_price - (cen.cons_price*0.033),0) when cen.pur_type = 'T'
        then ROUND(cen.cons_price*1.1,0) ELSE cen.cons_price END AS real_cons_price
        , cen.idx
        , cen.`name` AS center_name
        , 1 AS report_cnt
        , case when cen.pur_type = 'D' then '소득공제' when cen.pur_type = 'T' then '과세 세금계산서' ELSE '면세 세금계산서' END AS price_type
        , cr.cons_date
        , s.idx AS idx_crm_staff
        , s.name AS staff_name
        , c.name AS client_name
        , cc.name AS company_name
        FROM crm_reservation cr
        JOIN crm_client c ON cr.idx_crm_client = c.idx
        JOIN crm_staff s ON c.idx_crm_staff = s.idx
        JOIN crm_center cen ON c.idx_crm_center = cen.idx
        LEFT JOIN crm_company cc ON c.idx_crm_company = cc.idx
        WHERE cr.reservation_status IN ('NS', '입실')
        <if test="param.startDate neq null and param.startDate != ''">
            AND DATE_FORMAT(cr.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        </if>
        <if test="param.idxCrmCenter neq null and param.idxCrmCenter > '0'">
            AND cen.idx = #{param.idxCrmCenter} -- 센터검색
        </if>
        ) AS a
        GROUP BY a.idx_crm_staff ) b
    </select>

    <select id="selectStaffSchedule" parameterType="java.util.HashMap" resultMap="ReservationMap">
        /* CommonMapper.selectStaffSchedule 상담사 스케쥴 */
        SELECT
        cr.*, comp.name AS company_name
        FROM
        crm_reservation cr
            LEFT JOIN crm_client cc on cr.idx_crm_client = cc.idx
            LEFT JOIN crm_company comp on cc.idx_crm_company = comp.idx
        WHERE
        cr.idx_crm_staff = #{param.idxCrmStaff}
        AND
        DATE_FORMAT(cr.cons_date, '%Y-%m-%d') = #{param.consDate}
        <if test="param.idxCrmClient neq null and param.idxCrmClient != '-1'">
            AND cr.idxCrmClient = #{idxCrmClient} -- 해당 차트의 고객값만 조회
        </if>
        <!-- AND
        	reservation_status IN ('예약', '입실', '당일변경') -->
    </select>

    <select id="selectPayStaffDetail" parameterType="java.util.HashMap" resultMap="PayMap">
        /* CommonMapper.selectPayStaffDetail 상담사 급여 사아앙세 내역 */
        SELECT a.*
        , round(SUM(staff_pay)*0.03,0) AS income_tax -- 소득세
        , round(SUM(staff_pay)*0.003,0) AS local_income_tax -- 지방소득세
        , ROUND( SUM(staff_pay) - round(SUM(staff_pay)*0.03,0) - round(SUM(staff_pay)*0.003,0),0) AS real_staff_pay -- 실 지급액
        FROM (
        SELECT
        res.*
        , report.permission
        , report.permission_date
        , client.name as client_name
        , client.idx_crm_meta_product
        , client.idx_crm_person
        , meta.type as gubun
        , meta.product  as product_name
        , IF(client.idx_crm_meta_product = 19, client.etc_price, meta.price) as price
        , staff.name as staff_name
        , staff.pay/100
        <choose>
            <when test="param.idxCrmCenter != 0">
                , center.cons_price AS staff_pay
            </when>
            <otherwise>
                , case when client.client_type ='B2C' and reservation_status IN ('당일변경', '당일취소') then round(IF(client.idx_crm_meta_product = 19, client.etc_price , meta.price) * ifnull( IF(client.idx_crm_meta_product in (16,17,18), 0.5, staff.pay/100) ,0 ) /400,0)
                when client.client_type ='B2C' and reservation_status = 'NS' then round(IF(client.idx_crm_meta_product = 19, client.etc_price , meta.price) * ifnull( IF(client.idx_crm_meta_product in (16,17,18), 0.5, staff.pay/100) ,0 )/200,0)
                when client.client_type ='B2B' and reservation_status IN ('당일변경', '당일취소', 'NS') and staff.idx_crm_center = 0 then round(IF(client.idx_crm_meta_product = 19, client.etc_price , meta.price) * ifnull( IF(client.idx_crm_meta_product in (16,17,18), 0.5, staff.pay/100) ,0 )/200,0)
                ELSE round(IF(client.idx_crm_meta_product = 19, client.etc_price , meta.price) * ifnull( IF(client.idx_crm_meta_product in (16,17,18), 0.5, staff.pay/100) ,0) ) END AS staff_pay
                <!--                     , IF(client.client_type = 'B2B'
                                    ,
                                        case when reservation_status IN ('입실', 'NS') and client.idx_crm_meta_product = 19 then round(client.etc_price * ifnull(staff.pay,0)/100,0)
                                        when reservation_status IN ('입실', 'NS') and client.idx_crm_meta_product IN (16,17,18) then round(meta.price * 50/100,0)
                                        when reservation_status IN ('입실', 'NS') then round(meta.price * ifnull(staff.pay,0)/100, 0)
                                        end
                                    ,
                                        case when reservation_status IN ('입실', 'NS') and client.idx_crm_meta_product = 19 then round(client.etc_price * ifnull(staff.pay,0)/100,0)
                                        when reservation_status IN ('입실', 'NS') and client.idx_crm_meta_product IN (16,17,18) then round(meta.price * 50/100,0)
                                        when reservation_status IN ('입실', 'NS') then round(meta.price * ifnull(staff.pay,0)/100, 0)
                                        when reservation_status IN ('당일변경', '당일취소') and client.idx_crm_meta_product = 19 then round(client.etc_price * ifnull(staff.pay,0)/200,0)
                                        when reservation_status IN ('당일변경', '당일취소') and client.idx_crm_meta_product IN (16,17,18) then round(meta.price * 50/200,0)
                                        when reservation_status IN ('당일변경', '당일취소') then round(meta.price * ifnull(staff.pay,0)/200, 0)
                                        end ) AS staff_pay -->
            </otherwise>
        </choose>
        , staff.idx_crm_center as idx_center
        , IF(staff.idx_crm_center = 0, '본원센터', center.name) as center_name
        FROM
        (
        select
        idx
        , idx_crm_client
        , report_yn
        , cons_date
        , reservation_status
        from
        crm_reservation
        WHERE
        report_yn = 'Y'
        AND
        idx_crm_staff = #{param.idxCrmStaff}
        ) res
        LEFT JOIN
        crm_report report
        ON res.idx = report.idx_crm_reservation
        LEFT JOIN
        crm_staff staff
        ON staff.idx = report.idx_crm_staff
        LEFT JOIN
        crm_center center
        ON center.idx = staff.idx_crm_center
        JOIN
        crm_client client ON res.idx_crm_client = client.idx
        JOIN
        crm_meta meta ON meta.idx = client.idx_crm_meta_product
        ) a
        WHERE
        DATE_FORMAT(permission_date, '%Y') = #{param.date}
        group by idx_crm_person
    </select>

    <select id="selectCompanyStaticPerson" parameterType="java.util.HashMap" resultMap="CompanyStaticPersonMap">
        /* CommonMapper.selectCompanyStaticPerson 기업별 통계1 */
        SELECT
            IFNULL(SUM(IF(a.gender='남자', 1, 0)),0) AS gender_man,
            IFNULL(SUM(IF(a.gender='여자', 1, 0)),0) AS gender_woman,
            IFNULL(SUM(IF(NOT a.gender IN ('남자','여자') or a.gender is NULL, 1, 0)),0) AS gender_none,
            IFNULL(SUM(IF(a.age_range='10대 이하', 1, 0)),0) AS age10,
            IFNULL(SUM(IF(a.age_range='20대', 1, 0)),0) AS age20,
            IFNULL(SUM(IF(a.age_range='30대', 1, 0)),0) AS age30,
            IFNULL(SUM(IF(a.age_range='40대', 1, 0)),0) AS age40,
            IFNULL(SUM(IF(a.age_range='50대이상', 1, 0)),0) AS age50,
            IFNULL(SUM(IF(NOT a.age_range IN ('10대 이하', '20대','30대','40대', '50대이상') or a.age_range is NULL, 1, 0)),0) AS age_none,
            IFNULL(SUM(IF(a.gender='남자',a.cons_count_use,0)),0) AS count_man,
            IFNULL(SUM(IF(a.gender='여자',a.cons_count_use,0)),0) AS count_woman,
            IFNULL(SUM(IF(NOT a.gender IN ('남자','여자') or a.gender is NULL, a.cons_count_use, 0)),0) AS count_gender_none,
            IFNULL(SUM(IF(a.age_range='10대 이하', a.cons_count_use,0)),0) AS count_age10,
            IFNULL(SUM(IF(a.age_range='20대', a.cons_count_use,0)),0) AS count_age20,
            IFNULL(SUM(IF(a.age_range='30대', a.cons_count_use,0)),0) AS count_age30,
            IFNULL(SUM(IF(a.age_range='40대', a.cons_count_use,0)),0) AS count_age40,
            IFNULL(SUM(IF(a.age_range='50대이상', a.cons_count_use,0)),0) AS count_age50,
            IFNULL(SUM(IF(NOT a.age_range IN ('10대 이하', '20대','30대','40대', '50대이상') or a.age_range is NULL, a.cons_count_use, 0)),0) AS count_age_none,
            IFNULL(SUM(if(DATE_FORMAT(a.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}, 1, 0)),0) AS new_person_cnt,
            IFNULL(SUM(if(DATE_FORMAT(a.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}, 0, 1)),0) AS old_person_cnt,
            count(distinct a.idx) AS total_person_cnt,
            SUM(a.cons_count_use) AS total_count
        FROM (
            SELECT DISTINCT cc.idx_crm_company, cr2.cons_date, cp.*, cc.cons_count_use
            FROM crm_person cp
                JOIN crm_client cc ON cc.idx_crm_person = cp.idx
                JOIN crm_reservation cr ON cr.idx_crm_client = cc.idx AND DATE_FORMAT(cr.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
                JOIN (SELECT MIN(cons_date) AS cons_date, idx_crm_client FROM crm_reservation group BY idx_crm_client) AS cr2 ON cc.idx = cr2.idx_crm_client

            WHERE 1=1
            <if test="param.idx_crm_company neq null and param.idx_crm_company == '-1'">
                AND cc.idx_crm_company IS NOT NULL
            </if>
            <if test="param.idx_crm_company neq null and param.idx_crm_company > -1">
                AND cc.idx_crm_company = #{param.idx_crm_company}
            </if>
            <if test="param.idx_crm_center neq null and param.idx_crm_center > -1">
                AND cc.idx_crm_center = #{param.idx_crm_center}
            </if>
            GROUP BY cp.idx
        )a
    </select>

    <select id="selectCompanyStaticReport" parameterType="java.util.HashMap" resultMap="CompanyStaticReportMap">
        /* CommonMapper.selectCompanyStaticReport 기업별 통계2 */
        SELECT
        count(*) AS total_report_cnt,
        IFNULL(SUM(if(DATE_FORMAT(re2.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}, 1, 0)),0) AS new_report_cnt,
        IFNULL(SUM(if(DATE_FORMAT(re2.cons_date , '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}, 0, 1)),0) AS old_report_cnt,
        IFNULL(SUM(IF(cr.idx_crm_meta_danger = 36, 1, 0)),0) AS danger1st,
        IFNULL(SUM(IF(cr.idx_crm_meta_danger = 37, 1, 0)),0) AS danger2nd,
        IFNULL(SUM(IF(cr.idx_crm_meta_danger = 38, 1, 0)),0) AS danger3rd,
        IFNULL(SUM(IF(cr.idx_crm_meta_danger = 39, 1, 0)),0) AS danger4th,
        IFNULL(SUM(IF(NOT cr.idx_crm_meta_danger IN (36,37,38,39) OR cr.idx_crm_meta_danger IS NULL, 1, 0)),0) AS danger_none,
        IFNULL(SUM(IF(cr.idx_genre_meta = 1, 1, 0)),0) AS genre_psy,
        IFNULL(SUM(IF(cr.idx_genre_meta = 2, 1, 0)),0) AS genre_person,
        IFNULL(SUM(IF(cr.idx_genre_meta = 3, 1, 0)),0) AS genre_play,
        IFNULL(SUM(IF(cr.idx_genre_meta = 4, 1, 0)),0) AS genre_other,
        IFNULL(SUM(IF(NOT cr.idx_genre_meta IN (1,2,3,4) OR cr.idx_genre_meta IS NULL, 1, 0)),0) AS type_none,
        IFNULL(SUM(IF(cr.idx_type_meta = 5, 1, 0)),0) AS type_face,
        IFNULL(SUM(IF(cr.idx_type_meta = 6, 1, 0)),0) AS type_video,
        IFNULL(SUM(IF(cr.idx_type_meta = 7, 1, 0)),0) AS type_phone,
        IFNULL(SUM(IF(cr.idx_type_meta = 8, 1, 0)),0) AS type_chat,
        IFNULL(SUM(IF(cr.idx_type_meta = 9, 1, 0)),0) AS type_visit,
        IFNULL(SUM(IF(cr.idx_type_meta = 10, 1, 0)),0) AS type_reside,
        IFNULL(SUM(IF(NOT cr.idx_type_meta IN (5,6,7,8,9,10) OR cr.idx_type_meta IS NULL, 1, 0)),0) AS genre_none,
        IFNULL(SUM(IF(cr.idx_agenda_second = 15, 1, 0)),0) AS agenda15,
        IFNULL(SUM(IF(cr.idx_agenda_second = 16, 1, 0)),0) AS agenda16,
        IFNULL(SUM(IF(cr.idx_agenda_second = 17, 1, 0)),0) AS agenda17,
        IFNULL(SUM(IF(cr.idx_agenda_second = 18, 1, 0)),0) AS agenda18,
        IFNULL(SUM(IF(cr.idx_agenda_second = 19, 1, 0)),0) AS agenda19,
        IFNULL(SUM(IF(cr.idx_agenda_second = 20, 1, 0)),0) AS agenda20,
        IFNULL(SUM(IF(cr.idx_agenda_second = 21, 1, 0)),0) AS agenda21,
        IFNULL(SUM(IF(cr.idx_agenda_second = 22, 1, 0)),0) AS agenda22,
        IFNULL(SUM(IF(cr.idx_agenda_second = 23, 1, 0)),0) AS agenda23,
        IFNULL(SUM(IF(cr.idx_agenda_second = 24, 1, 0)),0) AS agenda24,
        IFNULL(SUM(IF(cr.idx_agenda_second = 25, 1, 0)),0) AS agenda25,
        IFNULL(SUM(IF(cr.idx_agenda_second = 26, 1, 0)),0) AS agenda26,
        IFNULL(SUM(IF(cr.idx_agenda_second = 27, 1, 0)),0) AS agenda27,
        IFNULL(SUM(IF(cr.idx_agenda_second = 28, 1, 0)),0) AS agenda28,
        IFNULL(SUM(IF(cr.idx_agenda_second = 29, 1, 0)),0) AS agenda29,
        IFNULL(SUM(IF(cr.idx_agenda_second = 30, 1, 0)),0) AS agenda30,
        IFNULL(SUM(IF(cr.idx_agenda_second = 31, 1, 0)),0) AS agenda31,
        IFNULL(SUM(IF(cr.idx_agenda_second = 32, 1, 0)),0) AS agenda32,
        IFNULL(SUM(IF(cr.idx_agenda_second = 33, 1, 0)),0) AS agenda33,
        IFNULL(SUM(IF(cr.idx_agenda_second = 34, 1, 0)),0) AS agenda34,
        IFNULL(SUM(IF(cr.idx_agenda_second = 35, 1, 0)),0) AS agenda35,
        IFNULL(SUM(IF(cr.idx_agenda_second = 36, 1, 0)),0) AS agenda36,
        IFNULL(SUM(IF(cr.idx_agenda_second = 37, 1, 0)),0) AS agenda37,
        IFNULL(SUM(IF(cr.idx_agenda_second = 38, 1, 0)),0) AS agenda38,
        IFNULL(SUM(IF(cr.idx_agenda_second = 39, 1, 0)),0) AS agenda39,
        IFNULL(SUM(IF(cr.idx_agenda_second = 40, 1, 0)),0) AS agenda40,
        IFNULL(SUM(IF(cr.idx_agenda_second = 41, 1, 0)),0) AS agenda41,
        IFNULL(SUM(IF(cr.idx_agenda_second = 42, 1, 0)),0) AS agenda42,
        IFNULL(SUM(IF(cr.idx_agenda_second = 43, 1, 0)),0) AS agenda43,
        IFNULL(SUM(IF(cr.idx_agenda_second = 44, 1, 0)),0) AS agenda44,
        IFNULL(SUM(IF(NOT cr.idx_agenda_second BETWEEN 15 AND 44 OR cr.idx_agenda_second IS NULL, 1, 0)),0) AS agenda_none
        FROM crm_reservation re
        JOIN crm_client cc ON re.idx_crm_client = cc.idx
        LEFT JOIN crm_report cr ON cr.idx_crm_reservation = re.idx
        JOIN (SELECT MIN(cons_date) AS cons_date, idx_crm_client FROM crm_reservation group BY idx_crm_client) AS re2 ON cc.idx = re2.idx_crm_client
        WHERE DATE_FORMAT(re.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
        <if test="param.idx_crm_company neq null and param.idx_crm_company == '-1'">
            AND cc.idx_crm_company IS NOT NULL
        </if>
        <if test="param.idx_crm_company neq null and param.idx_crm_company > -1">
            AND cc.idx_crm_company = #{param.idx_crm_company}
        </if>
        <if test="param.idx_crm_center neq null and param.idx_crm_center > -1">
            AND re.idx_crm_center = #{param.idx_crm_center}
        </if>
    </select>

    <select id="selectCompanyStaticReport2" parameterType="java.util.HashMap" resultMap="CompanyStaticReportMap2">
        /* CommonMapper.selectCompanyStaticReport2 기업별 통계2 */
        SELECT
        IFNULL(SUM(IF(a.idx_danger = 36, 1, 0)),0) AS per_danger1st,
        IFNULL(SUM(IF(a.idx_danger = 37, 1, 0)),0) AS per_danger2nd,
        IFNULL(SUM(IF(a.idx_danger = 38, 1, 0)),0) AS per_danger3rd,
        IFNULL(SUM(IF(a.idx_danger = 39, 1, 0)),0) AS per_danger4th,
        IFNULL(SUM(IF(NOT a.idx_danger IN (36,37,38,39) OR a.idx_danger IS NULL, 1, 0)),0) AS per_danger_none,
        IFNULL(SUM(IF(a.idx_genre = 1, 1, 0)),0) AS per_genre_psy,
        IFNULL(SUM(IF(a.idx_genre = 2, 1, 0)),0) AS per_genre_person,
        IFNULL(SUM(IF(a.idx_genre = 3, 1, 0)),0) AS per_genre_play,
        IFNULL(SUM(IF(a.idx_genre = 4, 1, 0)),0) AS per_genre_other,
        IFNULL(SUM(IF(NOT a.idx_genre IN (1,2,3,4) OR a.idx_genre IS NULL, 1, 0)),0) AS per_genre_none,
        IFNULL(SUM(IF(a.idx_type = 5, 1, 0)),0) AS per_type_face,
        IFNULL(SUM(IF(a.idx_type = 6, 1, 0)),0) AS per_type_video,
        IFNULL(SUM(IF(a.idx_type = 7, 1, 0)),0) AS per_type_phone,
        IFNULL(SUM(IF(a.idx_type = 8, 1, 0)),0) AS per_type_chat,
        IFNULL(SUM(IF(a.idx_type = 9, 1, 0)),0) AS per_type_visit,
        IFNULL(SUM(IF(a.idx_type = 10, 1, 0)),0) AS per_type_reside,
        IFNULL(SUM(IF(NOT a.idx_type IN (5,6,7,8,9,10) OR a.idx_type IS NULL, 1, 0)),0) AS per_type_none,
        IFNULL(SUM(IF(a.idx_agenda = 15, 1, 0)),0) AS per_agenda15,
        IFNULL(SUM(IF(a.idx_agenda = 16, 1, 0)),0) AS per_agenda16,
        IFNULL(SUM(IF(a.idx_agenda = 17, 1, 0)),0) AS per_agenda17,
        IFNULL(SUM(IF(a.idx_agenda = 18, 1, 0)),0) AS per_agenda18,
        IFNULL(SUM(IF(a.idx_agenda = 19, 1, 0)),0) AS per_agenda19,
        IFNULL(SUM(IF(a.idx_agenda = 20, 1, 0)),0) AS per_agenda20,
        IFNULL(SUM(IF(a.idx_agenda = 21, 1, 0)),0) AS per_agenda21,
        IFNULL(SUM(IF(a.idx_agenda = 22, 1, 0)),0) AS per_agenda22,
        IFNULL(SUM(IF(a.idx_agenda = 23, 1, 0)),0) AS per_agenda23,
        IFNULL(SUM(IF(a.idx_agenda = 24, 1, 0)),0) AS per_agenda24,
        IFNULL(SUM(IF(a.idx_agenda = 25, 1, 0)),0) AS per_agenda25,
        IFNULL(SUM(IF(a.idx_agenda = 26, 1, 0)),0) AS per_agenda26,
        IFNULL(SUM(IF(a.idx_agenda = 27, 1, 0)),0) AS per_agenda27,
        IFNULL(SUM(IF(a.idx_agenda = 28, 1, 0)),0) AS per_agenda28,
        IFNULL(SUM(IF(a.idx_agenda = 29, 1, 0)),0) AS per_agenda29,
        IFNULL(SUM(IF(a.idx_agenda = 30, 1, 0)),0) AS per_agenda30,
        IFNULL(SUM(IF(a.idx_agenda = 31, 1, 0)),0) AS per_agenda31,
        IFNULL(SUM(IF(a.idx_agenda = 32, 1, 0)),0) AS per_agenda32,
        IFNULL(SUM(IF(a.idx_agenda = 33, 1, 0)),0) AS per_agenda33,
        IFNULL(SUM(IF(a.idx_agenda = 34, 1, 0)),0) AS per_agenda34,
        IFNULL(SUM(IF(a.idx_agenda = 35, 1, 0)),0) AS per_agenda35,
        IFNULL(SUM(IF(a.idx_agenda = 36, 1, 0)),0) AS per_agenda36,
        IFNULL(SUM(IF(a.idx_agenda = 37, 1, 0)),0) AS per_agenda37,
        IFNULL(SUM(IF(a.idx_agenda = 38, 1, 0)),0) AS per_agenda38,
        IFNULL(SUM(IF(a.idx_agenda = 39, 1, 0)),0) AS per_agenda39,
        IFNULL(SUM(IF(a.idx_agenda = 40, 1, 0)),0) AS per_agenda40,
        IFNULL(SUM(IF(a.idx_agenda = 41, 1, 0)),0) AS per_agenda41,
        IFNULL(SUM(IF(a.idx_agenda = 42, 1, 0)),0) AS per_agenda42,
        IFNULL(SUM(IF(a.idx_agenda = 43, 1, 0)),0) AS per_agenda43,
        IFNULL(SUM(IF(a.idx_agenda = 44, 1, 0)),0) AS per_agenda44,
        IFNULL(SUM(IF(NOT a.idx_agenda BETWEEN 15 AND 44 OR a.idx_agenda IS NULL, 1, 0)),0) AS per_agenda_none

        FROM(
        SELECT
        cr.idx_crm_client AS idx_client,
        cr.idx_crm_meta_danger AS idx_danger,
        cr.idx_type_meta AS idx_type,
        cr.idx_genre_meta AS idx_genre,
        cr.idx_agenda_second AS idx_agenda
        FROM crm_reservation re
        JOIN crm_client cc ON re.idx_crm_client = cc.idx
        LEFT JOIN crm_report cr ON cr.idx_crm_reservation = re.idx
        JOIN (SELECT MIN(cons_date) AS cons_date, idx_crm_client FROM crm_reservation group BY idx_crm_client) AS re2 ON cc.idx = re2.idx_crm_client
        WHERE
            DATE_FORMAT(re.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
            AND cc.idx_crm_company IS NOT NULL
        <if test="param.idx_crm_company neq null and param.idx_crm_company > -1">
            AND cc.idx_crm_company = #{param.idx_crm_company}
        </if>
        <if test="param.idx_crm_center neq null and param.idx_crm_center > -1">
            AND re.idx_crm_center = #{param.idx_crm_center}
        </if>
        GROUP BY cr.idx_crm_meta_danger, re.idx_crm_client
        ) a;

    </select>



    <select id="selectExcelCompanyStatic" parameterType="java.util.HashMap" resultMap="ExcelCompanyStaticMap">
        /* CommonMapper.selectCompanyStaticReport 기업별 통계2 */
        SELECT
        com.name AS company_name,
        (CASE WHEN ct.name is null then '본원센터'
             WHEN ct.name = '' then '본원센터'
             ELSE ct.name
             END) AS center_name,
        cp.name AS person_name,
        cp.gender,
        cp.age_range,
        re.cons_date,
        cr.permission_date,
        cr.danger_step_title,
        mr1.cons_title AS title_genre,
        mr2.cons_title AS title_type,
        mr3.cons_title AS title_agenda_first,
        mr4.cons_title AS title_agenda_second
        FROM crm_reservation re
        JOIN crm_client cc ON re.idx_crm_client = cc.idx
        JOIN (SELECT MIN(cons_date) AS cons_date, idx_crm_client FROM crm_reservation group BY idx_crm_client) AS re2 ON cc.idx = re2.idx_crm_client
        JOIN crm_company com ON cc.idx_crm_company = com.idx
        JOIN crm_person cp ON cp.idx = cc.idx_crm_person
        LEFT JOIN crm_report cr ON cr.idx_crm_reservation = re.idx
        LEFT JOIN crm_meta_report mr1 ON cr.idx_genre_meta = mr1.idx
        LEFT JOIN crm_meta_report mr2 ON cr.idx_type_meta = mr2.idx
        LEFT JOIN crm_meta_report mr3 ON cr.idx_agenda_first = mr3.idx
        LEFT JOIN crm_meta_report mr4 ON cr.idx_agenda_second = mr4.idx
        LEFT JOIN crm_center ct ON cc.idx_crm_center = ct.idx
        WHERE DATE_FORMAT(re.cons_date, '%Y-%m') BETWEEN #{param.startDate} AND #{param.endDate}
            AND cc.idx_crm_company IS NOT NULL
        <if test="param.idx_crm_company neq null and param.idx_crm_company > -1">
            AND cc.idx_crm_company = #{param.idx_crm_company}
        </if>
        <if test="param.idx_crm_company neq null and param.idx_crm_center > -1">
            AND cc.idx_crm_center = #{param.idx_crm_center}
        </if>
    </select>


<!--    Reception-->
    <insert id="insertReception" parameterType="com.carrot.recept.dao.ReceptionVO">
        /* commonMapper.insertReservation 상담예약 등록 */
        INSERT INTO crm_recept
        (
            recept_name
            ,recept_gender
            ,recept_phone
            ,recept_email
            ,recept_memo
            ,recept_status
            ,idx_crm_staff_create
            ,idx_crm_staff_update
        )
        VALUES (
                #{receptName}
               ,#{receptGender}
               ,#{receptPhone}
               ,#{receptEmail}
               ,#{receptMemo}
               ,#{receptStatus}
               ,#{idxCrmStaffCreate}
               ,#{idxCrmStaffUpdate}
               )
        <selectKey keyProperty="idx" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="selectReception" parameterType="java.util.HashMap" resultMap="ReceptionMap">
        /* commonMapper.selectReservation 상담예약 조회 */
        SELECT
            cr.idx
             , cr.recept_name
             , cr.recept_gender
             , cr.recept_phone
             , cr.recept_email
             , cr.recept_memo
             , cr.recept_status
             , cr.idx_crm_staff_update
             , IF ( cs2.name IS NULL, '-', cs2.name) as update_staff
             , cr.idx_crm_staff_create
             , IF ( cs.name IS NULL, '-', cs.name) as create_staff
             , cr.recept_updatedate
             , cr.recept_createdate
        FROM
            crm_recept cr
                left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
                left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
        WHERE cr.idx = #{idx}
            limit 1
    </select>

    <update id="updateReception" parameterType="com.carrot.recept.dao.ReceptionVO">
        /* commonMapper.updateReservation 상담예약 수정 */
        UPDATE
            crm_recept
        <trim prefix="SET" suffixOverrides=",">
            <if test="idxCrmStaffUpdate != null">idx_crm_staff_update = #{idxCrmStaffUpdate},</if>
            <if test="receptName != null">recept_name = #{receptName},</if>
            <if test="receptGender != null">recept_gender = #{receptGender},</if>
            <if test="receptPhone != null">recept_phone = #{receptPhone},</if>
            <if test="receptEmail != null">recept_email = #{receptEmail},</if>
            <if test="receptMemo != null">recept_memo = #{receptMemo},</if>
            <if test="receptStatus != null">recept_status = #{receptStatus},</if>
        </trim>
        WHERE idx = #{idx}
    </update>

    <delete id="deleteReception" parameterType="java.util.HashMap">
        /* CommonMapper.delete : 정보 삭제 */
        DELETE FROM crm_recept WHERE idx = #{idx}
    </delete>

    <select id="selectReceptionList" parameterType="java.util.HashMap" resultMap="ReceptionMap">
        /* CommonMapper.selectReceptionList 상담 예약 목록 */
        SELECT * FROM (
        SELECT
        @ROWNUM:=@ROWNUM+1 AS rownum
        , cr.idx
        , cr.recept_name
        , cr.recept_gender
        , cr.recept_phone
        , cr.recept_email
        , cr.recept_memo
        , cr.recept_status
        , cr.idx_crm_staff_update
        , IF ( cs2.name IS NULL, '-', cs2.name) as update_staff
        , cr.idx_crm_staff_create
        , IF ( cs.name IS NULL, '-', cs.name) as create_staff
        , cr.recept_updatedate
        , cr.recept_createdate
        FROM
        crm_recept cr
        left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
        left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
        , (SELECT @ROWNUM:=0) AS R
        WHERE
        1 = 1
        <if test="receptGender != null and receptGender != ''">
            AND cr.recept_gender = #{receptGender}
        </if>
        <if test="receptStatus != null and receptStatus != ''">
            AND cr.recept_status = #{receptStatus}
        </if>
        <if test="searchText != null and searchText != ''">
            AND (
            cr.recept_phone LIKE CONCAT('%', #{searchText}, '%')
            OR cr.recept_email LIKE CONCAT('%', #{searchText}, '%')
            OR cr.recept_name LIKE CONCAT('%', #{searchText}, '%')
            )
        </if>
        <if test="receptStartDate != null and receptStartDate != '' and receptEndDate != null and receptEndDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cr.recept_updatedate, '%Y-%m-%d') >= DATE_FORMAT(#{receptStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cr.recept_updatedate, '%Y-%m-%d') <= DATE_FORMAT(#{receptEndDate}, '%Y-%m-%d')
			]]>
        </if>
            ORDER BY cr.idx asc
        ) ROW ORDER BY ROW.ROWNUM DESC
        <if test="startPage != '-1'">
            LIMIT #{startPage}, #{pageSize}
        </if>
    </select>

    <select id="selectReceptionListCount" parameterType="java.util.HashMap" resultType="int">
        /* CommonMapper.selectReceptionListCount 상담예약 목록 수 */
        SELECT
            COUNT(*)
        FROM
        crm_recept cr
            left join crm_staff cs on cr.idx_crm_staff_create = cs.idx
            left join crm_staff cs2 on cr.idx_crm_staff_update = cs2.idx
        WHERE
        1 = 1
        <if test="receptGender != null and receptGender != ''">
            AND cr.recept_gender = #{receptGender}
        </if>
        <if test="receptStatus != null and receptStatus != ''">
            AND cr.recept_status = #{receptStatus}
        </if>
        <if test="searchText != null and searchText != ''">
            AND (
            cr.recept_phone LIKE CONCAT('%', #{searchText}, '%')
            OR cr.recept_email LIKE CONCAT('%', #{searchText}, '%')
            OR cr.recept_name LIKE CONCAT('%', #{searchText}, '%')
            )
        </if>
        <if test="receptStartDate != null and receptStartDate != '' and receptEndDate != null and receptEndDate != ''">
            <![CDATA[
				AND
					DATE_FORMAT(cr.recept_updatedate, '%Y-%m-%d') >= DATE_FORMAT(#{receptStartDate}, '%Y-%m-%d')
				AND
					DATE_FORMAT(cr.recept_updatedate, '%Y-%m-%d') <= DATE_FORMAT(#{receptEndDate}, '%Y-%m-%d')
			]]>
        </if>
    </select>
</mapper>

